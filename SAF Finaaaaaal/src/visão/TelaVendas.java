/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SpinnerNumberModel;
import modeloBeansX.BeansVendas;
import modeloBeansX.BeansEstoque;
import modeloBeansX.ModeloTabelaX;
import modeloConnectionX.ConectaBDX;
import modeloDaoX.DaoEstoque;
import modeloDaoX.DaoVendas;

/**
 *
 * @author Filipe
 */
public class TelaVendas extends javax.swing.JFrame {

    /**
     * Creates new form TelaVendas
     */
    private Thread pesquisa;
    ConectaBDX conexaoBD = new ConectaBDX();
    BeansVendas beansVendas = new BeansVendas();
    DaoVendas daoVendas = new DaoVendas();
    DaoEstoque daoEstoque = new DaoEstoque();
    BeansEstoque beansEstoque = new BeansEstoque();
    private double preco;
    private int qtdemestoque;
    private int flagclick;
    private String receita;
    private int id;
    String nome;
    String permissao;
    String user;
    
    public TelaVendas() {
        initComponents();
        jSpinnerQuantidade.setModel(new SpinnerNumberModel(0, 0, 999, 1));
        preencherTabelaProdutos("select * from estoque order by categoria desc");
        preencherTabelaVendas("select * from vendas order by idvenda desc");
        
        conexaoBD.conectaBD();
        try {
            // pega o primeiro resultado encontrado na tabela
            conexaoBD.executaSql("select nome_cliente from clientes order by nome_cliente");
            conexaoBD.rs.first();

            // mostra todos os dados da tabela
            do {
                jComboBoxClientes.addItem(conexaoBD.rs.getString("nome_cliente"));
            } while (conexaoBD.rs.next());// enquanto houver dados
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher ArrayList.\nErro: " + ex);
        } finally{
            conexaoBD.desconectaBD();
        }
        jComboBoxCategoria.setBackground(new Color(0, 0, 0, 0));
        jComboBoxClientes.setBackground(new Color(0, 0, 0, 0));
        jTextFieldNomeDoMedico.setBackground(new Color(0, 0, 0, 0));
        jTextFieldIDProduto.setBackground(new Color(0, 0, 0, 0));
        jTextFieldNomeVendas.setBackground(new Color(0, 0, 0, 0));
        jTextFieldValorFinal.setBackground(new Color(0, 0, 0, 0));
        jButtonCancelarVenda.setBackground(new Color(0, 0, 0, 0));
        jButtonEditarVenda.setBackground(new Color(0, 0, 0, 0));
        jButtonExcluirVenda.setBackground(new Color(0, 0, 0, 0));
        jButtonFinalizarVenda.setBackground(new Color(0, 0, 0, 0));
        jSpinnerQuantidade.setBackground(new Color(0, 0, 0, 0));
        jButtonSair.setBackground(new Color(0, 0, 0, 0));
        jButtonSalvarVenda.setBackground(new Color(0, 0, 0, 0));
        
        
        URL url = this.getClass().getResource("/imagens/logoSafNormal.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(iconeTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldNomeVendas = new javax.swing.JTextField();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jButtonPesquisarProdutos = new javax.swing.JButton();
        jSpinnerQuantidade = new javax.swing.JSpinner();
        jTextFieldNomeCliente = new javax.swing.JTextField();
        jButtonSair = new javax.swing.JButton();
        jScrollPaneProdutos = new javax.swing.JScrollPane();
        jTableProdutos = new javax.swing.JTable();
        jTextFieldIDProduto = new javax.swing.JTextField();
        jTextFieldNomeDoMedico = new javax.swing.JTextField();
        jButtonFinalizarVenda = new javax.swing.JButton();
        jButtonCancelarVenda = new javax.swing.JButton();
        jScrollPaneVendas = new javax.swing.JScrollPane();
        jTableVendas = new javax.swing.JTable();
        jButtonEditarVenda = new javax.swing.JButton();
        jButtonExcluirVenda = new javax.swing.JButton();
        jButtonSalvarVenda = new javax.swing.JButton();
        jTextFieldValorFinal = new javax.swing.JTextField();
        jComboBoxClientes = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela de Vendas");
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1050, 610));
        setSize(new java.awt.Dimension(1050, 610));
        getContentPane().setLayout(null);

        jTextFieldNomeVendas.setBorder(null);
        getContentPane().add(jTextFieldNomeVendas);
        jTextFieldNomeVendas.setBounds(120, 160, 260, 20);

        jComboBoxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Remédio", "Cosmético" }));
        jComboBoxCategoria.setBorder(null);
        jComboBoxCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxCategoriaItemStateChanged(evt);
            }
        });
        getContentPane().add(jComboBoxCategoria);
        jComboBoxCategoria.setBounds(560, 120, 260, 20);

        jButtonPesquisarProdutos.setText("Pesquisar");
        jButtonPesquisarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarProdutosActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPesquisarProdutos);
        jButtonPesquisarProdutos.setBounds(400, 153, 100, 30);

        jSpinnerQuantidade.setBorder(null);
        jSpinnerQuantidade.setEnabled(false);
        jSpinnerQuantidade.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerQuantidadeStateChanged(evt);
            }
        });
        jSpinnerQuantidade.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jSpinnerQuantidadeInputMethodTextChanged(evt);
            }
        });
        getContentPane().add(jSpinnerQuantidade);
        jSpinnerQuantidade.setBounds(160, 400, 70, 30);

        jTextFieldNomeCliente.setBorder(null);
        jTextFieldNomeCliente.setEnabled(false);
        jTextFieldNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeClienteActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldNomeCliente);
        jTextFieldNomeCliente.setBounds(200, 500, 180, 20);

        jButtonSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/Botao Minimizar.png"))); // NOI18N
        jButtonSair.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/Botao Minimizar Alterado.png"))); // NOI18N
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSair);
        jButtonSair.setBounds(980, 20, 40, 50);

        jTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProdutosMouseClicked(evt);
            }
        });
        jScrollPaneProdutos.setViewportView(jTableProdutos);

        getContentPane().add(jScrollPaneProdutos);
        jScrollPaneProdutos.setBounds(170, 230, 570, 140);

        jTextFieldIDProduto.setBorder(null);
        jTextFieldIDProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldIDProdutoKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldIDProduto);
        jTextFieldIDProduto.setBounds(180, 120, 200, 20);

        jTextFieldNomeDoMedico.setBorder(null);
        jTextFieldNomeDoMedico.setEnabled(false);
        getContentPane().add(jTextFieldNomeDoMedico);
        jTextFieldNomeDoMedico.setBounds(620, 460, 220, 30);

        jButtonFinalizarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/finalizar rollouver.png"))); // NOI18N
        jButtonFinalizarVenda.setEnabled(false);
        jButtonFinalizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarVendaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonFinalizarVenda);
        jButtonFinalizarVenda.setBounds(710, 520, 140, 40);

        jButtonCancelarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/botaoCancelarNormal.png"))); // NOI18N
        jButtonCancelarVenda.setEnabled(false);
        jButtonCancelarVenda.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/botaoCancelar.png"))); // NOI18N
        jButtonCancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarVendaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCancelarVenda);
        jButtonCancelarVenda.setBounds(910, 480, 100, 40);

        jTableVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVendasMouseClicked(evt);
            }
        });
        jScrollPaneVendas.setViewportView(jTableVendas);

        getContentPane().add(jScrollPaneVendas);
        jScrollPaneVendas.setBounds(870, 110, 160, 280);

        jButtonEditarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/botaoEditarNormal.png"))); // NOI18N
        jButtonEditarVenda.setEnabled(false);
        jButtonEditarVenda.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/botaoEditar.png"))); // NOI18N
        jButtonEditarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarVendaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEditarVenda);
        jButtonEditarVenda.setBounds(910, 400, 100, 40);

        jButtonExcluirVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/botaoExcluirNormal.png"))); // NOI18N
        jButtonExcluirVenda.setEnabled(false);
        jButtonExcluirVenda.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/botaoExcluir.png"))); // NOI18N
        jButtonExcluirVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirVendaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonExcluirVenda);
        jButtonExcluirVenda.setBounds(910, 520, 100, 40);

        jButtonSalvarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/botaoSalvarNormal.png"))); // NOI18N
        jButtonSalvarVenda.setEnabled(false);
        jButtonSalvarVenda.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botoes/botaoSalvar.png"))); // NOI18N
        jButtonSalvarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarVendaActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSalvarVenda);
        jButtonSalvarVenda.setBounds(910, 440, 100, 40);

        jTextFieldValorFinal.setEditable(false);
        jTextFieldValorFinal.setBorder(null);
        getContentPane().add(jTextFieldValorFinal);
        jTextFieldValorFinal.setBounds(560, 410, 260, 20);

        jComboBoxClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Selecionar já cadastrado -" }));
        jComboBoxClientes.setBorder(null);
        jComboBoxClientes.setEnabled(false);
        jComboBoxClientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxClientesItemStateChanged(evt);
            }
        });
        getContentPane().add(jComboBoxClientes);
        jComboBoxClientes.setBounds(200, 470, 180, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/telaVenda.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1050, 610);

        setLocation(new java.awt.Point(280, 90));
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxCategoriaItemStateChanged
        // TODO add your handling code here
        if(jComboBoxCategoria.getSelectedIndex() == 1 && flagclick == 0){
            preencherTabelaProdutos("select * from estoque where categoria='Remédio'");
        }
        else if(jComboBoxCategoria.getSelectedIndex() == 2 && flagclick == 0){
            preencherTabelaProdutos("select * from estoque where categoria='Cosmético'");
        }
        else if(jComboBoxCategoria.getSelectedIndex() == 0 && flagclick == 0){
            preencherTabelaProdutos("select * from estoque order by categoria desc");
        }
    }//GEN-LAST:event_jComboBoxCategoriaItemStateChanged

    private void jButtonExcluirVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirVendaActionPerformed
        // TODO add your handling code here:
        flagclick = 0;
        int teste = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o registro desta venda?", "Atenção!", 0, 0);
        if (teste == JOptionPane.YES_OPTION) {
            beansVendas.setIdVenda(id);
            daoVendas.excluir(beansVendas);
            jButtonCancelarVenda.doClick();
        } else {

        }
        
    }//GEN-LAST:event_jButtonExcluirVendaActionPerformed

    private void jButtonCancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarVendaActionPerformed
        // TODO add your handling code here:
        flagclick = 0;
        //ATIVADORES
        //CAMPOS
        jTextFieldIDProduto.setEnabled(true);
        jTextFieldIDProduto.setEditable(true);
        //DESATIVADOS POREM EDITAVEIS
        jTextFieldNomeCliente.setEditable(true);
        jTextFieldNomeDoMedico.setEditable(true);
        
        jTextFieldNomeVendas.setEnabled(true);
        jTextFieldNomeVendas.setEditable(true);
        
        jComboBoxCategoria.setEnabled(true);
        //BOTOES
        jButtonPesquisarProdutos.setEnabled(true);
        //TABELAS
        jTableVendas.setEnabled(true);
        jScrollPaneVendas.setEnabled(true);
        
        jTableProdutos.setEnabled(true);
        jScrollPaneProdutos.setEnabled(true);
        
        //DESATIVADORES
        //CAMPOS
        jSpinnerQuantidade.setEnabled(false);
        jComboBoxClientes.setEnabled(false);
        jTextFieldNomeCliente.setEnabled(false);
        jTextFieldNomeDoMedico.setEnabled(false);
        
        //BOTOES
        jButtonFinalizarVenda.setEnabled(false);
        jButtonCancelarVenda.setEnabled(false);
        jButtonSalvarVenda.setEnabled(false);
        jButtonEditarVenda.setEnabled(false);
        jButtonExcluirVenda.setEnabled(false);
        
        //SETERES DE TEXTO
        jTextFieldIDProduto.setText(null);
        jTextFieldNomeCliente.setText(null);
        jComboBoxClientes.setSelectedIndex(0);
        jTextFieldNomeDoMedico.setText(null);
        jTextFieldNomeVendas.setText(null);
        jComboBoxCategoria.setSelectedIndex(0);
        jSpinnerQuantidade.setValue(0);
        
        preencherTabelaProdutos("select * from estoque order by categoria desc");
        preencherTabelaVendas("select * from vendas order by idvenda desc");
    }//GEN-LAST:event_jButtonCancelarVendaActionPerformed

    private void jTextFieldIDProdutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIDProdutoKeyTyped
        // TODO add your handling code here:
        flagclick = 0;
        jComboBoxCategoria.setSelectedIndex(0);
        pesquisa = new Thread() {
            public void run() {
                preencherTabelaProdutosAuto("select * from estoque where idproduto like '%" + jTextFieldIDProduto.getText() + "%' order by idproduto");
            }
        };
        pesquisa.run();
    }//GEN-LAST:event_jTextFieldIDProdutoKeyTyped

    private void jTableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProdutosMouseClicked
        // TODO add your handling code here:
        flagclick = 1;
         //ATIVADORES
        //BOTÕES
        jButtonFinalizarVenda.setEnabled(true);
        jButtonCancelarVenda.setEnabled(true);
        jSpinnerQuantidade.setEnabled(true);
        if(jComboBoxClientes.getSelectedIndex() == 0){
            jTextFieldNomeCliente.setEnabled(true);
        }
        jComboBoxClientes.setEnabled(true);
        
        //DESATIVADORES
        jTableVendas.setEnabled(false);
        jScrollPaneVendas.setEnabled(false);
        jTableVendas.clearSelection();
        jComboBoxCategoria.setEnabled(false);
        
        String codigo = "" + jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 0);
        // abre a conexao
        conexaoBD.conectaBD();
        // excuta um string sql
        conexaoBD.executaSql("select * from estoque where idproduto='" + codigo + "'");

        try {
            // pega o primeiro do banco
            conexaoBD.rs.first();
            jComboBoxCategoria.setSelectedItem(conexaoBD.rs.getString("categoria"));
            jTextFieldIDProduto.setText(Integer.toString(conexaoBD.rs.getInt("idproduto")));
            jTextFieldNomeVendas.setText(conexaoBD.rs.getString("nomeproduto"));
            qtdemestoque = (conexaoBD.rs.getInt("quantidade"));
            preco = conexaoBD.rs.getDouble("valorvenda");
            receita = conexaoBD.rs.getString("receita");
            
            if (conexaoBD.rs.getString("receita").equals("Sim")) {
                jTextFieldNomeDoMedico.setEnabled(true);
            } else {
                jTextFieldNomeDoMedico.setEnabled(false);
            }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao selecionar dados.\nErro: " + ex);
        }
        // fecha a conexão
        conexaoBD.desconectaBD();


    }//GEN-LAST:event_jTableProdutosMouseClicked

    private void jButtonPesquisarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarProdutosActionPerformed
        // TODO add your handling code here:
        flagclick = 0;
        jComboBoxCategoria.setSelectedIndex(0);
        preencherTabelaProdutos("select * from estoque where nomeproduto like '%" + jTextFieldNomeVendas.getText() + "%' order by nomeproduto");
    }//GEN-LAST:event_jButtonPesquisarProdutosActionPerformed

    private void jButtonFinalizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarVendaActionPerformed
        // TODO add your handling code here:
        flagclick = 0;
        if(jTextFieldIDProduto.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Por favor, insira o ID do produto!");
        }
        else if(jComboBoxCategoria.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Por favor, escolha uma categoria!");
        }
        else if(jTextFieldNomeVendas.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Por favor, insira o nome do produto!");
        }
        else if((int)jSpinnerQuantidade.getValue() <= 0){
            JOptionPane.showMessageDialog(null, "Por favor, insira pelo menos 1 qtd do produto para venda!");
        }
        else if(receita.equals("Sim") && jTextFieldNomeCliente.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Por favor, para a venda de remédio controlado, insira o nome do cliente!");
        }
        else if(receita.equals("Sim") && jTextFieldNomeDoMedico.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Por favor, para a venda de remédio controlado, insira o nome do médico!");
        }
        else{
            beansVendas.setNomeProduto(jTextFieldNomeVendas.getText());
            beansVendas.setValorTotal(Double.parseDouble(jTextFieldValorFinal.getText()));
            beansVendas.setQuantidade((int)jSpinnerQuantidade.getValue());
            if(jComboBoxClientes.getSelectedIndex() == 0){
                beansVendas.setNomeCliente(jTextFieldNomeCliente.getText());
            }
            else{
                beansVendas.setNomeCliente((String)jComboBoxClientes.getSelectedItem());
            }
            beansVendas.setNomeMedico(jTextFieldNomeDoMedico.getText());
            Date dataAtual = new Date();
            java.sql.Date d = new java.sql.Date (dataAtual.getTime());
            beansVendas.setDataVenda(d);
            beansVendas.setCategoria((String)jComboBoxCategoria.getSelectedItem());
            beansVendas.setIdProduto(Integer.parseInt(jTextFieldIDProduto.getText()));
            beansVendas.setReceita(receita);
            
            beansEstoque.setIdproduto(Integer.parseInt(jTextFieldIDProduto.getText()));
            if(qtdemestoque - (int)jSpinnerQuantidade.getValue() >= 0){
                int qtd = qtdemestoque - (int)jSpinnerQuantidade.getValue();
                beansEstoque.setQuantidade(qtd);
                daoVendas.salvar(beansVendas);
                daoEstoque.darBaixa(beansEstoque);
                jButtonCancelarVenda.doClick();
            }
            else{
                JOptionPane.showMessageDialog(null, "Quantidade indisponível! Itens em estoque: " + qtdemestoque);
            }
            
            
        }
    }//GEN-LAST:event_jButtonFinalizarVendaActionPerformed

    private void jButtonEditarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarVendaActionPerformed
        // TODO add your handling code here:
        flagclick = 0;
        //ATIVADORES
        //CAMPOS
      //  jTextFieldIDProduto.setEditable(true);
     //   jTextFieldNomeVendas.setEditable(true);
    //   jTextFieldNomeCliente.setEditable(true);
     //   jTextFieldNomeDoMedico.setEditable(true);
        
        //BOTOES
        jButtonSalvarVenda.setEnabled(true);
        
        //DESATIVADORES
        //BOTOES
        jButtonEditarVenda.setEnabled(false);
        jButtonExcluirVenda.setEnabled(false);
        
        //TABELA
        jTableVendas.setEnabled(false);
        jScrollPaneVendas.setEnabled(false);
        jTableVendas.clearSelection();
        
    }//GEN-LAST:event_jButtonEditarVendaActionPerformed

    private void jButtonSalvarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarVendaActionPerformed
        // TODO add your handling code here:
        flagclick = 0;
        if(jTextFieldIDProduto.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Por favor, insira o ID do produto!");
        }
        else if(jComboBoxCategoria.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Por favor, escolha uma categoria!");
        }
        else if(jTextFieldNomeVendas.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Por favor, insira o nome do produto!");
        }
        else if((int)jSpinnerQuantidade.getValue() <= 0){
            JOptionPane.showMessageDialog(null, "Por favor, insira pelo menos 1 qtd do produto para venda!");
        }
        else{
            beansVendas.setNomeProduto(jTextFieldNomeVendas.getText());
            beansVendas.setValorTotal(Double.parseDouble(jTextFieldValorFinal.getText()));
            beansVendas.setQuantidade((int)jSpinnerQuantidade.getValue());
            if(jComboBoxClientes.getSelectedIndex() == 0){
                beansVendas.setNomeCliente(jTextFieldNomeCliente.getText());
            }
            else{
                beansVendas.setNomeCliente((String)jComboBoxClientes.getSelectedItem());
            }
            beansVendas.setNomeMedico(jTextFieldNomeDoMedico.getText());
            beansVendas.setCategoria((String)jComboBoxCategoria.getSelectedItem());
            beansVendas.setIdProduto(Integer.parseInt(jTextFieldIDProduto.getText()));
            beansVendas.setReceita(receita);
            beansVendas.setIdVenda(id);
            
            beansEstoque.setIdproduto(Integer.parseInt(jTextFieldIDProduto.getText()));
            daoVendas.editar(beansVendas);
            jButtonCancelarVenda.doClick();
            }
    }//GEN-LAST:event_jButtonSalvarVendaActionPerformed

    private void jTableVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVendasMouseClicked
        // TODO add your handling code here:
        flagclick = 1;
        //ATIVADORES
        //BOTÕES
        jButtonEditarVenda.setEnabled(true);
        jButtonExcluirVenda.setEnabled(true);
        jButtonCancelarVenda.setEnabled(true);
        
        //CAMPOS
        jTextFieldNomeCliente.setEnabled(true);
        jComboBoxClientes.setEnabled(true);
        jSpinnerQuantidade.setEnabled(true);
        //DESATIVADORES
        //CAMPOS
        jComboBoxCategoria.setEnabled(false);
        jTextFieldIDProduto.setEditable(false);
        jTextFieldNomeVendas.setEditable(false);
        jTextFieldNomeCliente.setEditable(false);
        jTextFieldNomeDoMedico.setEditable(false);
        //TABELA
        jTableProdutos.setEnabled(false);
        jScrollPaneProdutos.setEnabled(false);
        jTableProdutos.clearSelection();
        //BOTOES
        jButtonPesquisarProdutos.setEnabled(false);
        
        
        id = 0 + (int)jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 0);

        // abre a conexao
        conexaoBD.conectaBD();
        // excuta um string sql
        conexaoBD.executaSql("select * from vendas where idvenda='" + id + "'");

        try {
            // pega o primeiro do banco
            conexaoBD.rs.first();
            jTextFieldIDProduto.setText(Integer.toString(conexaoBD.rs.getInt("idproduto")));
            jTextFieldNomeVendas.setText(conexaoBD.rs.getString("nomeproduto"));
            jSpinnerQuantidade.setValue(conexaoBD.rs.getInt("quantidade"));
            jTextFieldNomeCliente.setText(conexaoBD.rs.getString("nomecliente"));
            jTextFieldNomeDoMedico.setText(conexaoBD.rs.getString("nomemedico"));
            jComboBoxCategoria.setSelectedItem(conexaoBD.rs.getString("categoria"));
            qtdemestoque = (conexaoBD.rs.getInt("quantidade"));
            preco = conexaoBD.rs.getDouble("valortotal");
            
            if (conexaoBD.rs.getString("receita").equals("Sim")) {
                jTextFieldNomeDoMedico.setEnabled(true);
            } else {
                jTextFieldNomeDoMedico.setEnabled(false);
            }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao selecionar dados.\nErro: " + ex);
        }
        // fecha a conexão
        conexaoBD.desconectaBD();
    }//GEN-LAST:event_jTableVendasMouseClicked

    private void jSpinnerQuantidadeInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jSpinnerQuantidadeInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jSpinnerQuantidadeInputMethodTextChanged

    private void jSpinnerQuantidadeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerQuantidadeStateChanged
        // TODO add your handling code here:
        jTextFieldValorFinal.setText(Double.toString(preco * (int)jSpinnerQuantidade.getValue()));
    }//GEN-LAST:event_jSpinnerQuantidadeStateChanged

    private void jTextFieldNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeClienteActionPerformed

    private void jComboBoxClientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxClientesItemStateChanged
        // TODO add your handling code here:
        if(jComboBoxClientes.getSelectedIndex() != 0){
            jTextFieldNomeCliente.setEnabled(false);
            jTextFieldNomeCliente.setText(null);
        }
        else if(flagclick == 1){
            jTextFieldNomeCliente.setEnabled(true);
            
        }
    }//GEN-LAST:event_jComboBoxClientesItemStateChanged

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed
    public void preencherTabelaProdutos(String sql) {
        ArrayList dadosVendas = new ArrayList();
        String colunas[] = new String[]{"ID", "Nome", "Preço", "QTD", "Categoria", "Receita"};

        // abre a conexao
        conexaoBD.conectaBD();
        conexaoBD.executaSql(sql);

        try {
            // pega o primeiro resultado encontrado na tabela
            conexaoBD.rs.first();

            // mostra todos os dados da tabela
            do {
                dadosVendas.add(new Object[]{
                    conexaoBD.rs.getInt("idproduto"),
                    conexaoBD.rs.getString("nomeproduto"),
                    conexaoBD.rs.getDouble("valorvenda"),
                    conexaoBD.rs.getInt("quantidade"),
                    conexaoBD.rs.getString("categoria"),
                    conexaoBD.rs.getString("receita")

                });
            } while (conexaoBD.rs.next());// enquanto houver dados
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher ArrayList.\nErro: " + ex);
        }

// cria uma intancia do modelo de tabela aqui nos passamos todos os objetos e o título de cada uma das colunas
        ModeloTabelaX modeloTabela = new ModeloTabelaX(dadosVendas, colunas);

        // seta o modelo da tabela 
        jTableProdutos.setModel(modeloTabela);

        // ID
        jTableProdutos.getColumnModel().getColumn(0).setPreferredWidth(54);
        jTableProdutos.getColumnModel().getColumn(0).setResizable(false);

        // NOME
        jTableProdutos.getColumnModel().getColumn(1).setPreferredWidth(150);
        jTableProdutos.getColumnModel().getColumn(1).setResizable(false);


        // VALOR VENDA
        jTableProdutos.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableProdutos.getColumnModel().getColumn(2).setResizable(false);

        // QTD
        jTableProdutos.getColumnModel().getColumn(3).setPreferredWidth(55);
        jTableProdutos.getColumnModel().getColumn(3).setResizable(false);

        // CATEGORIA
        jTableProdutos.getColumnModel().getColumn(4).setPreferredWidth(150);
        jTableProdutos.getColumnModel().getColumn(4).setResizable(false);

        // RECEITA
        jTableProdutos.getColumnModel().getColumn(5).setPreferredWidth(55);
        jTableProdutos.getColumnModel().getColumn(5).setResizable(false);

        // não deixa reordenar os dados da tabela
        jTableProdutos.getTableHeader().setReorderingAllowed(false);

        // não deixa a tabela ser redimensionada
        jTableProdutos.setAutoResizeMode(jTableProdutos.AUTO_RESIZE_OFF);

        // permite selecionar apenas um dado na tabela por vez
        jTableProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        // fecha a conexão
        conexaoBD.desconectaBD();
    }
    public void preencherTabelaProdutosAuto(String sql) {
        ArrayList dadosVendas = new ArrayList();
        String colunas[] = new String[]{"ID do Produto", "Nome", "Preço", "QTD", "Categoria", "Receita"};

        // abre a conexao
        conexaoBD.conectaBD();
        conexaoBD.executaSql(sql);

        try {
            // pega o primeiro resultado encontrado na tabela
            conexaoBD.rs.first();

            // mostra todos os dados da tabela
            do {
                dadosVendas.add(new Object[]{
                    conexaoBD.rs.getInt("idproduto"),
                    conexaoBD.rs.getString("nomeproduto"),
                    conexaoBD.rs.getDouble("valorvenda"),
                    conexaoBD.rs.getInt("quantidade"),
                    conexaoBD.rs.getString("categoria"),
                    conexaoBD.rs.getString("receita")

                });
            } while (conexaoBD.rs.next());// enquanto houver dados
        } catch (SQLException ex) {
          //  JOptionPane.showMessageDialog(rootPane, "Erro ao preencher ArrayList.\nErro: " + ex);
        }

// cria uma intancia do modelo de tabela aqui nos passamos todos os objetos e o título de cada uma das colunas
        ModeloTabelaX modeloTabela = new ModeloTabelaX(dadosVendas, colunas);

        // seta o modelo da tabela 
        jTableProdutos.setModel(modeloTabela);

        // ID
        jTableProdutos.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTableProdutos.getColumnModel().getColumn(0).setResizable(false);

        // NOME
        jTableProdutos.getColumnModel().getColumn(1).setPreferredWidth(85);
        jTableProdutos.getColumnModel().getColumn(1).setResizable(false);


        // VALOR VENDA
        jTableProdutos.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTableProdutos.getColumnModel().getColumn(2).setResizable(false);

        // QTD
        jTableProdutos.getColumnModel().getColumn(3).setPreferredWidth(35);
        jTableProdutos.getColumnModel().getColumn(3).setResizable(false);

        // CATEGORIA
        jTableProdutos.getColumnModel().getColumn(4).setPreferredWidth(85);
        jTableProdutos.getColumnModel().getColumn(4).setResizable(false);

        // RECEITA
        jTableProdutos.getColumnModel().getColumn(5).setPreferredWidth(55);
        jTableProdutos.getColumnModel().getColumn(5).setResizable(false);

        // não deixa reordenar os dados da tabela
        jTableProdutos.getTableHeader().setReorderingAllowed(false);

        // não deixa a tabela ser redimensionada
        jTableProdutos.setAutoResizeMode(jTableProdutos.AUTO_RESIZE_OFF);

        // permite selecionar apenas um dado na tabela por vez
        jTableProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        // fecha a conexão
        conexaoBD.desconectaBD();
    }
    public void preencherTabelaVendas(String sql) {
        ArrayList dadosVendas = new ArrayList();
        String colunas[] = new String[]{"#", "Produto", "Preço", "QTD", "Cliente", "Medico", "Data", "Categoria"};

        // abre a conexao
        conexaoBD.conectaBD();
        conexaoBD.executaSql(sql);

        try {
            // pega o primeiro resultado encontrado na tabela
            conexaoBD.rs.first();

            // mostra todos os dados da tabela
            do {
                dadosVendas.add(new Object[]{
                    conexaoBD.rs.getInt("idvenda"),
                    conexaoBD.rs.getString("nomeproduto"),
                    conexaoBD.rs.getDouble("valortotal"),
                    conexaoBD.rs.getInt("quantidade"),
                    conexaoBD.rs.getString("nomecliente"),
                    conexaoBD.rs.getString("nomemedico"),
                    conexaoBD.rs.getDate("datavenda"),
                    conexaoBD.rs.getString("categoria")

                });
            } while (conexaoBD.rs.next());// enquanto houver dados
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher ArrayList.\nErro: " + ex);
        }

// cria uma intancia do modelo de tabela aqui nos passamos todos os objetos e o título de cada uma das colunas
        ModeloTabelaX modeloTabela = new ModeloTabelaX(dadosVendas, colunas);

        // seta o modelo da tabela 
        jTableVendas.setModel(modeloTabela);

        // CODIGO
        jTableVendas.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTableVendas.getColumnModel().getColumn(0).setResizable(false);

        // NOME
        jTableVendas.getColumnModel().getColumn(1).setPreferredWidth(130);
        jTableVendas.getColumnModel().getColumn(1).setResizable(false);


        // VALOR VENDA
        jTableVendas.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTableVendas.getColumnModel().getColumn(2).setResizable(false);

        // QTD
        jTableVendas.getColumnModel().getColumn(3).setPreferredWidth(35);
        jTableVendas.getColumnModel().getColumn(3).setResizable(false);

        // NOME CLIENTE
        jTableVendas.getColumnModel().getColumn(4).setPreferredWidth(182);
        jTableVendas.getColumnModel().getColumn(4).setResizable(false);

        // NOME MEDICO
        jTableVendas.getColumnModel().getColumn(5).setPreferredWidth(182);
        jTableVendas.getColumnModel().getColumn(5).setResizable(false);
        
        // DATA VENDA
        jTableVendas.getColumnModel().getColumn(6).setPreferredWidth(85);
        jTableVendas.getColumnModel().getColumn(6).setResizable(false);
        
         // CATEGORIA
        jTableVendas.getColumnModel().getColumn(7).setPreferredWidth(85);
        jTableVendas.getColumnModel().getColumn(7).setResizable(false);

        // não deixa reordenar os dados da tabela
        jTableVendas.getTableHeader().setReorderingAllowed(false);

        // não deixa a tabela ser redimensionada
        jTableVendas.setAutoResizeMode(jTableVendas.AUTO_RESIZE_OFF);

        // permite selecionar apenas um dado na tabela por vez
        jTableVendas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        // fecha a conexão
        conexaoBD.desconectaBD();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelarVenda;
    private javax.swing.JButton jButtonEditarVenda;
    private javax.swing.JButton jButtonExcluirVenda;
    private javax.swing.JButton jButtonFinalizarVenda;
    private javax.swing.JButton jButtonPesquisarProdutos;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvarVenda;
    private javax.swing.JComboBox<String> jComboBoxCategoria;
    private javax.swing.JComboBox<String> jComboBoxClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPaneProdutos;
    private javax.swing.JScrollPane jScrollPaneVendas;
    private javax.swing.JSpinner jSpinnerQuantidade;
    private javax.swing.JTable jTableProdutos;
    private javax.swing.JTable jTableVendas;
    private javax.swing.JTextField jTextFieldIDProduto;
    private javax.swing.JTextField jTextFieldNomeCliente;
    private javax.swing.JTextField jTextFieldNomeDoMedico;
    private javax.swing.JTextField jTextFieldNomeVendas;
    private javax.swing.JTextField jTextFieldValorFinal;
    // End of variables declaration//GEN-END:variables
}
