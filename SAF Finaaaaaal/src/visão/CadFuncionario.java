/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;

import controleX.CriptografaSenha;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import modeloBeansX.BeansFuncionario;
import modeloBeansX.ModeloTabelaX;
import modeloConnectionX.ConectaBDX;
import modeloDaoX.DaoFuncionario;
import controleX.ValidaCpf;
import modeloBeansX.BeansUsuario;
import modeloDaoX.DaoUsuario;

/**
 *
 * @author danie
 */
public class CadFuncionario extends javax.swing.JFrame {

    BeansFuncionario _beansfuncionario = new BeansFuncionario();
    BeansFuncionario beansfuncionario = new BeansFuncionario();
    DaoFuncionario daofuncionario = new DaoFuncionario();

    BeansUsuario _beansUsuario = new BeansUsuario();
    BeansUsuario beansUsuario = new BeansUsuario();
    DaoUsuario daoUsuario = new DaoUsuario();

    ConectaBDX conexaoBD = new ConectaBDX();
    ValidaCpf verificaCpf = new ValidaCpf();
    int flag = 0;
    String permissao;
    String user;
    String nome;

    public CadFuncionario(String user, String permissao, String nome) {
        //this.setResizable(false);

        URL url = this.getClass().getResource("/icones/add-user16.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(iconeTitulo);

        initComponents();
        jTextFieldCodEnd.setVisible(false);
        setExtendedState(MAXIMIZED_BOTH);
        this.permissao = permissao;
        this.user = user;

        preencherTabela("select * from funcionarios join enderecos on enderecos.cod_end = funcionarios.cod_end order by nomefunc");
    }

    CadFuncionario() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitulo = new javax.swing.JLabel();
        jButtonSair = new javax.swing.JButton();
        jPanelBotoes = new javax.swing.JPanel();
        jButtonDel = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jPanelFormularioInformacoes = new javax.swing.JPanel();
        jButtonPesquisar = new javax.swing.JButton();
        jTextFieldCod = new javax.swing.JTextField();
        jLabelCod = new javax.swing.JLabel();
        jLabelCPF = new javax.swing.JLabel();
        jLabelTelefone = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jComboBoxCargo = new javax.swing.JComboBox<>();
        jLabelCargo = new javax.swing.JLabel();
        jLabelRG = new javax.swing.JLabel();
        jLabelNascimento = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jFormattedTextFieldNascimento = new javax.swing.JFormattedTextField();
        jFormattedTextFieldCPF = new javax.swing.JFormattedTextField();
        jFormattedTextFieldTelefone = new javax.swing.JFormattedTextField();
        jFormattedTextFieldRG = new javax.swing.JFormattedTextField();
        jPanelFormularioUsuario = new javax.swing.JPanel();
        jLabelUsuario = new javax.swing.JLabel();
        jLabelSenha = new javax.swing.JLabel();
        jTextFieldUsuario = new javax.swing.JTextField();
        jPasswordFieldSenha = new javax.swing.JPasswordField();
        jPasswordFieldConfirmarSenha = new javax.swing.JPasswordField();
        jLabelConfirmarSenha = new javax.swing.JLabel();
        jPanelTabela = new javax.swing.JPanel();
        jScrollPaneFuncionarios = new javax.swing.JScrollPane();
        jTableFuncionarios = new javax.swing.JTable();
        jPanelFormularioEndereco = new javax.swing.JPanel();
        jLabelCEP = new javax.swing.JLabel();
        jFormattedTextFieldCEP = new javax.swing.JFormattedTextField();
        jLabelRua = new javax.swing.JLabel();
        jTextFieldRua = new javax.swing.JTextField();
        jLabelBairro = new javax.swing.JLabel();
        jTextFieldBairro = new javax.swing.JTextField();
        jLabelNumero = new javax.swing.JLabel();
        jTextFieldNumero = new javax.swing.JTextField();
        jLabelComplemento = new javax.swing.JLabel();
        jTextFieldComplemento = new javax.swing.JTextField();
        jLabelCidade = new javax.swing.JLabel();
        jTextFieldCidade = new javax.swing.JTextField();
        jLabelEstado = new javax.swing.JLabel();
        jTextFieldEstado = new javax.swing.JTextField();
        jTextFieldCodEnd = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Funcionários");
        getContentPane().setLayout(null);

        jLabelTitulo.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabelTitulo.setText("Administração de funcionarios");
        getContentPane().add(jLabelTitulo);
        jLabelTitulo.setBounds(30, 10, 370, 34);

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSair);
        jButtonSair.setBounds(60, 330, 60, 30);

        jPanelBotoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonDel.setText("Deletar");
        jButtonDel.setEnabled(false);
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });

        jButtonEditar.setText("Editar");
        jButtonEditar.setEnabled(false);
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setEnabled(false);
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotoesLayout = new javax.swing.GroupLayout(jPanelBotoes);
        jPanelBotoes.setLayout(jPanelBotoesLayout);
        jPanelBotoesLayout.setHorizontalGroup(
            jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBotoesLayout.setVerticalGroup(
            jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jButtonDel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelBotoes);
        jPanelBotoes.setBounds(30, 70, 130, 240);

        jPanelFormularioInformacoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jTextFieldCod.setEditable(false);
        jTextFieldCod.setEnabled(false);

        jLabelCod.setText("Codigo do Funcionário");
        jLabelCod.setEnabled(false);

        jLabelCPF.setText("CPF");
        jLabelCPF.setEnabled(false);

        jLabelTelefone.setText("Telefone");
        jLabelTelefone.setEnabled(false);

        jTextFieldNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeActionPerformed(evt);
            }
        });

        jComboBoxCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha um abaixo", "Diretor", "Gerente", "Farmacêutico", "Vendedor", "Perfumista", "Balconista" }));
        jComboBoxCargo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jComboBoxCargo.setEnabled(false);
        jComboBoxCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCargoActionPerformed(evt);
            }
        });

        jLabelCargo.setText("Cargo");
        jLabelCargo.setEnabled(false);

        jLabelRG.setText("RG");
        jLabelRG.setEnabled(false);

        jLabelNascimento.setText("Data de Nascimento");
        jLabelNascimento.setEnabled(false);

        jLabelNome.setText("Nome");

        try {
            jFormattedTextFieldNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldNascimento.setEnabled(false);
        jFormattedTextFieldNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldNascimentoActionPerformed(evt);
            }
        });

        try {
            jFormattedTextFieldCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldCPF.setEnabled(false);

        try {
            jFormattedTextFieldTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldTelefone.setEnabled(false);

        try {
            jFormattedTextFieldRG.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###-# ")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldRG.setEnabled(false);

        jPanelFormularioUsuario.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelUsuario.setText("Usuário");
        jLabelUsuario.setEnabled(false);

        jLabelSenha.setText("Senha");
        jLabelSenha.setEnabled(false);

        jTextFieldUsuario.setEnabled(false);
        jTextFieldUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsuarioActionPerformed(evt);
            }
        });

        jPasswordFieldSenha.setEditable(false);
        jPasswordFieldSenha.setEnabled(false);

        jPasswordFieldConfirmarSenha.setEditable(false);
        jPasswordFieldConfirmarSenha.setEnabled(false);

        jLabelConfirmarSenha.setText("Confirmar Senha");
        jLabelConfirmarSenha.setEnabled(false);

        javax.swing.GroupLayout jPanelFormularioUsuarioLayout = new javax.swing.GroupLayout(jPanelFormularioUsuario);
        jPanelFormularioUsuario.setLayout(jPanelFormularioUsuarioLayout);
        jPanelFormularioUsuarioLayout.setHorizontalGroup(
            jPanelFormularioUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormularioUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordFieldConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanelFormularioUsuarioLayout.setVerticalGroup(
            jPanelFormularioUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFormularioUsuarioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelConfirmarSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordFieldConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanelFormularioInformacoesLayout = new javax.swing.GroupLayout(jPanelFormularioInformacoes);
        jPanelFormularioInformacoes.setLayout(jPanelFormularioInformacoesLayout);
        jPanelFormularioInformacoesLayout.setHorizontalGroup(
            jPanelFormularioInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioInformacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormularioInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormularioInformacoesLayout.createSequentialGroup()
                        .addComponent(jLabelCargo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelCod, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanelFormularioInformacoesLayout.createSequentialGroup()
                        .addComponent(jComboBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldCod, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(jPanelFormularioInformacoesLayout.createSequentialGroup()
                        .addGroup(jPanelFormularioInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFormularioInformacoesLayout.createSequentialGroup()
                                .addGroup(jPanelFormularioInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jFormattedTextFieldCPF, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelRG, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelNascimento, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jFormattedTextFieldNascimento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jFormattedTextFieldRG, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelTelefone, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jFormattedTextFieldTelefone, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelFormularioInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanelFormularioUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabelCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 24, Short.MAX_VALUE))))
        );
        jPanelFormularioInformacoesLayout.setVerticalGroup(
            jPanelFormularioInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioInformacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormularioInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCod)
                    .addComponent(jLabelCargo))
                .addGap(6, 6, 6)
                .addGroup(jPanelFormularioInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelNome)
                .addGroup(jPanelFormularioInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormularioInformacoesLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFormularioInformacoesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCPF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormularioInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelFormularioInformacoesLayout.createSequentialGroup()
                        .addComponent(jFormattedTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabelTelefone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelRG)
                        .addGap(4, 4, 4)
                        .addComponent(jFormattedTextFieldRG, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelNascimento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextFieldNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelFormularioUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelFormularioInformacoes);
        jPanelFormularioInformacoes.setBounds(180, 70, 550, 390);

        jPanelTabela.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Cargo", "CPF", "Telefone", "Endereço", "CEP", "RG", "Nascimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableFuncionariosMouseClicked(evt);
            }
        });
        jScrollPaneFuncionarios.setViewportView(jTableFuncionarios);

        javax.swing.GroupLayout jPanelTabelaLayout = new javax.swing.GroupLayout(jPanelTabela);
        jPanelTabela.setLayout(jPanelTabelaLayout);
        jPanelTabelaLayout.setHorizontalGroup(
            jPanelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneFuncionarios, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelTabelaLayout.setVerticalGroup(
            jPanelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneFuncionarios, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanelTabela);
        jPanelTabela.setBounds(780, 60, 560, 650);

        jPanelFormularioEndereco.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelCEP.setText("CEP");
        jLabelCEP.setEnabled(false);

        try {
            jFormattedTextFieldCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldCEP.setEnabled(false);

        jLabelRua.setText("Rua");
        jLabelRua.setEnabled(false);

        jTextFieldRua.setEnabled(false);

        jLabelBairro.setText("Bairro");
        jLabelBairro.setEnabled(false);

        jTextFieldBairro.setEnabled(false);

        jLabelNumero.setText("Número");
        jLabelNumero.setEnabled(false);

        jTextFieldNumero.setEnabled(false);

        jLabelComplemento.setText("Complemento");
        jLabelComplemento.setEnabled(false);

        jTextFieldComplemento.setEnabled(false);

        jLabelCidade.setText("Cidade:");
        jLabelCidade.setEnabled(false);

        jTextFieldCidade.setEnabled(false);

        jLabelEstado.setText("Estado:");
        jLabelEstado.setEnabled(false);

        jTextFieldEstado.setEnabled(false);

        jTextFieldCodEnd.setEnabled(false);

        javax.swing.GroupLayout jPanelFormularioEnderecoLayout = new javax.swing.GroupLayout(jPanelFormularioEndereco);
        jPanelFormularioEndereco.setLayout(jPanelFormularioEnderecoLayout);
        jPanelFormularioEnderecoLayout.setHorizontalGroup(
            jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioEnderecoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormularioEnderecoLayout.createSequentialGroup()
                        .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldNumero, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldRua)
                            .addComponent(jFormattedTextFieldCEP, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                        .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFormularioEnderecoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 20, Short.MAX_VALUE)
                                .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelEstado)
                                    .addComponent(jLabelComplemento))
                                .addGap(218, 218, 218))
                            .addGroup(jPanelFormularioEnderecoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelCidade)
                                    .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jTextFieldComplemento, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                        .addComponent(jTextFieldCidade)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanelFormularioEnderecoLayout.createSequentialGroup()
                        .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFormularioEnderecoLayout.createSequentialGroup()
                                .addComponent(jTextFieldBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldCodEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelFormularioEnderecoLayout.createSequentialGroup()
                                .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelRua)
                                    .addComponent(jLabelBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelNumero))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanelFormularioEnderecoLayout.setVerticalGroup(
            jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFormularioEnderecoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelFormularioEnderecoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTextFieldCodEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFormularioEnderecoLayout.createSequentialGroup()
                        .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCEP)
                            .addComponent(jLabelComplemento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextFieldCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelRua)
                        .addGap(9, 9, 9)
                        .addComponent(jTextFieldRua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNumero)
                            .addComponent(jLabelCidade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jTextFieldNumero))
                        .addGap(9, 9, 9)
                        .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelBairro)
                            .addComponent(jLabelEstado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFormularioEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldBairro, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jTextFieldEstado))))
                .addContainerGap())
        );

        getContentPane().add(jPanelFormularioEndereco);
        jPanelFormularioEndereco.setBounds(180, 470, 550, 250);

        setBounds(270, 70, 1366, 763);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        flag = 1;
        //Ativadores

        jButtonSalvar.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jLabelCEP.setEnabled(true);
        jLabelCPF.setEnabled(true);
        jLabelCod.setEnabled(true);

        jLabelNome.setEnabled(true);
        jLabelTelefone.setEnabled(true);
        jTextFieldCod.setEnabled(true);
        jLabelCargo.setEnabled(true);
        jComboBoxCargo.setEnabled(true);
        jLabelRG.setEnabled(true);
        jLabelNascimento.setEnabled(true);
        jFormattedTextFieldRG.setEnabled(true);
        jFormattedTextFieldNascimento.setEnabled(true);
        jLabelUsuario.setEnabled(true);
        jLabelSenha.setEnabled(true);
        jLabelConfirmarSenha.setEnabled(true);

        //CAMPOS DE ENDEREÇO
        jTextFieldRua.setEnabled(true);
        jTextFieldBairro.setEnabled(true);
        jTextFieldNumero.setEnabled(true);
        jFormattedTextFieldCEP.setEnabled(true);
        jTextFieldComplemento.setEnabled(true);
        jTextFieldCidade.setEnabled(true);
        jTextFieldEstado.setEnabled(true);

        jTextFieldRua.setEditable(true);
        jTextFieldBairro.setEditable(true);
        jTextFieldNumero.setEditable(true);
        jFormattedTextFieldCEP.setEditable(true);
        jTextFieldComplemento.setEditable(true);
        jTextFieldCidade.setEditable(true);
        jTextFieldEstado.setEditable(true);

        //LABELS DE ENDEREÇO
        jLabelRua.setEnabled(true);
        jLabelBairro.setEnabled(true);
        jLabelNumero.setEnabled(true);
        jLabelCEP.setEnabled(true);
        jLabelComplemento.setEnabled(true);
        jLabelCidade.setEnabled(true);
        jLabelEstado.setEnabled(true);

        //Desativadores
        jButtonNovo.setEnabled(false);
        jButtonPesquisar.setEnabled(false);
        jButtonEditar.setEnabled(false);
        jButtonSair.setEnabled(false);
        jScrollPaneFuncionarios.setEnabled(false);
        jTableFuncionarios.setEnabled(false);

        //habilita os campos de texto após clicar no botão "novo"
        jFormattedTextFieldCPF.setEnabled(true);
        jTextFieldNome.setEnabled(true);
        jFormattedTextFieldCEP.setEnabled(true);
        jFormattedTextFieldTelefone.setEnabled(true);

        jTextFieldUsuario.setEnabled(true);
        jPasswordFieldSenha.setEnabled(true);
        jPasswordFieldConfirmarSenha.setEnabled(true);

        jFormattedTextFieldCPF.setEditable(true);
        jTextFieldNome.setEditable(true);
        jFormattedTextFieldCEP.setEditable(true);
        jFormattedTextFieldTelefone.setEditable(true);

        jFormattedTextFieldRG.setEditable(true);
        jFormattedTextFieldNascimento.setEditable(true);
        jTextFieldUsuario.setEditable(true);
        jPasswordFieldSenha.setEditable(true);
        jPasswordFieldConfirmarSenha.setEditable(true);

        //limpar campos de texto
        jTextFieldCod.setText(null);
        jFormattedTextFieldCPF.setText(null);
        jTextFieldNome.setText(null);

        jFormattedTextFieldCEP.setText(null);
        jFormattedTextFieldTelefone.setText(null);
        jComboBoxCargo.setSelectedIndex(0);
        jFormattedTextFieldRG.setText(null);
        jFormattedTextFieldNascimento.setText(null);

        //coloca o foco no campo "código" após criar um novo cadastro
        jTextFieldNome.requestFocus();
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jTextFieldNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        //jTextField_Pesquisar.requestFocus();
        if (flag == 1) {

            String senha = jPasswordFieldSenha.getText().trim();
            //quando o campo está em branco
            if ((String) jComboBoxCargo.getSelectedItem() == (String) jComboBoxCargo.getItemAt(0)) {
                JOptionPane.showMessageDialog(null, "Escolha um cargo para continuar", "Atenção!", 2);
            } else if (jTextFieldNome.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Insira um nome para prosseguir!", "Atenção!", 2);
                jTextFieldNome.requestFocus();
            } else if (jTextFieldNome.getText() != null) {
                try {
                    int num = Integer.parseInt(jTextFieldNome.getText());
                    JOptionPane.showMessageDialog(null, "Por favor, insira um nome válido! (Não pode ser apenas números)");
                } catch (NumberFormatException e) {

                    if (jFormattedTextFieldCPF.getText().equals("   .   .   -  ")) {
                        JOptionPane.showMessageDialog(null, "Insira um CPF para prosseguir!", "Atenção!", 2);
                        jFormattedTextFieldCPF.requestFocus();
                    } else if (jFormattedTextFieldRG.getText() != null) {
                        //JOptionPane.showMessageDialog(rootPane, jFormattedTextFieldCPF.getText());
                        String parte1 = jFormattedTextFieldCPF.getText().substring(0, 3);
                        String parte2 = jFormattedTextFieldCPF.getText().substring(4, 7);
                        String parte3 = jFormattedTextFieldCPF.getText().substring(8, 11);
                        String parte4 = jFormattedTextFieldCPF.getText().substring(12, 14);
                        String cpf = parte1 + parte2 + parte3 + parte4;
                        //JOptionPane.showMessageDialog(rootPane, jFormattedTextFieldCPF.getText());
                        verificaCpf.validaCpf(cpf);
                        cpf = "";

                        String verifica = String.valueOf(verificaCpf.isValido());

                        if (verifica == "true") {
                            /*JOptionPane.showMessageDialog(rootPane, "CPF Válido");
                            jFormattedTextFieldCPF.setText("");
                            jFormattedTextFieldCPF.requestFocus();*/
                            if (jFormattedTextFieldTelefone.getText().equals("(  )      -    ")) {
                                JOptionPane.showMessageDialog(null, "Insira um telefone para prosseguir!", "Atenção!", 2);
                                jFormattedTextFieldTelefone.requestFocus();
                            } else if (jFormattedTextFieldRG.getText().equals("  .   .   -  ")) {
                                JOptionPane.showMessageDialog(null, "Insira um RG para prosseguir!", "Atenção!", 2);
                            } else if (jFormattedTextFieldNascimento.getText().equals("  /  /    ")) {
                                JOptionPane.showMessageDialog(null, "Insira um nascimento para prosseguir!", "Atenção!", 2);
                            } else if (jTextFieldUsuario.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira um usuário para prosseguir!", "Atenção!", 2);
                            } else if (jPasswordFieldSenha.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira uma senha para prosseguir!", "Atenção!", 2);
                            } else if (jFormattedTextFieldCEP.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira um CEP para prosseguir!", "Atenção!", 2);
                                jFormattedTextFieldCEP.requestFocus();
                            } else if (jTextFieldRua.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira uma rua para prosseguir!", "Atenção!", 2);
                            } else if (jTextFieldNumero.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira um número para prosseguir!", "Atenção!", 2);
                            } else if (jTextFieldBairro.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira um bairro para prosseguir!", "Atenção!", 2);
                            } else if (jTextFieldCidade.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira uma cidade para prosseguir!", "Atenção!", 2);
                            } else if (jTextFieldEstado.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira um estado para prosseguir!", "Atenção!", 2);
                            } else if (!jPasswordFieldSenha.getText().equals(jPasswordFieldConfirmarSenha.getText())) {
                                JOptionPane.showMessageDialog(null, "As senhas não coincidem!\nVerifique a ortografia.", "Atenção!", 2);
                            } else {
                                String data = jFormattedTextFieldNascimento.getText();
                                DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                                Date date = null;
                                try {
                                    date = new java.sql.Date(((java.util.Date) formatter.parse(data)).getTime());
                                } catch (ParseException ex) {
                                    JOptionPane.showMessageDialog(null, "Erro na conversão da data \n" + ex);
                                }
                                int cod = 0;
                                conexaoBD.conectaBD();
                                conexaoBD.executaSql("select cod_end from funcionarios order by cod_end desc");
                                CriptografaSenha criptografaSenha = new CriptografaSenha();
                                criptografaSenha.setSenha(senha);
                                String senhaCriptografada = criptografaSenha.getSenha();
                                beansfuncionario.setNome(jTextFieldNome.getText());
                                beansfuncionario.setCPF(jFormattedTextFieldCPF.getText());
                                beansfuncionario.setTelefone(jFormattedTextFieldTelefone.getText());
                                beansfuncionario.setCargo((String) jComboBoxCargo.getSelectedItem());
                                beansfuncionario.setRG(jFormattedTextFieldRG.getText());
                                beansfuncionario.setNascimento(date);
                                beansfuncionario.setUsuario(jTextFieldUsuario.getText());
                                beansfuncionario.setSenha(senhaCriptografada);
                                try {
                                    conexaoBD.rs.first();
                                    cod = conexaoBD.rs.getInt("cod_end") + 1;
                                    beansfuncionario.setCod_func(cod);
                                    beansfuncionario.setCodigoend2(cod);
                                } catch (SQLException ex) {
                                    JOptionPane.showMessageDialog(null, "Erro ao setar codigo e codigoend2", "Atenção!", 1);
                                }
                                conexaoBD.desconectaBD();

                                beansfuncionario.setRua(jTextFieldRua.getText());
                                beansfuncionario.setBairro(jTextFieldBairro.getText());
                                beansfuncionario.setNumero(Integer.parseInt(jTextFieldNumero.getText()));
                                beansfuncionario.setCep(Integer.parseInt(jFormattedTextFieldCEP.getText()));
                                beansfuncionario.setComplemento(jTextFieldComplemento.getText());
                                beansfuncionario.setCidade(jTextFieldCidade.getText());
                                beansfuncionario.setEstado(jTextFieldEstado.getText());

                                /*beansUsuario.setUsuario(jTextFieldUsuario.getText());
                                        beansUsuario.setSenha(senhaCriptografada);
                                        beansUsuario.setPermissao(jComboBoxCargo.getSelectedIndex());*/
                                int teste = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja salvar os dados desse funcionário? \n" + "Cargo: " + beansfuncionario.getCargo() + "\n" + "Nome: " + beansfuncionario.getNome() + "\n" + "CPF: " + beansfuncionario.getCPF() + "\n" + "Telefone: " + beansfuncionario.getTelefone() + "\n" + "RG: " + beansfuncionario.getRG() + "\n" + "Nascimento: " + beansfuncionario.getNascimento(), "Atenção!", 0, 0);
                                if (teste == JOptionPane.YES_OPTION) {
                                    //daoUsuario.salvar(beansUsuario);
                                    daofuncionario.salvar(beansfuncionario);

                                    //Ativadores
                                    jButtonNovo.setEnabled(true);
                                    jButtonPesquisar.setEnabled(true);
                                    jButtonSair.setEnabled(true);
                                    jScrollPaneFuncionarios.setEnabled(true);
                                    jTableFuncionarios.setEnabled(true);

                                    //Desativadores
                                    jButtonCancelar.setEnabled(false);
                                    jButtonEditar.setEnabled(false);
                                    jButtonDel.setEnabled(false);
                                    jButtonSalvar.setEnabled(false);

                                    jFormattedTextFieldCPF.setEnabled(false);
                                    jFormattedTextFieldTelefone.setEnabled(false);
                                    jComboBoxCargo.setEnabled(false);
                                    jFormattedTextFieldRG.setEnabled(false);
                                    jFormattedTextFieldNascimento.setEnabled(false);
                                    jTextFieldUsuario.setEnabled(false);
                                    jPasswordFieldSenha.setEnabled(false);
                                    jPasswordFieldConfirmarSenha.setEnabled(false);

                                    //CAMPOS DE ENDEREÇO
                                    jTextFieldRua.setEnabled(false);
                                    jTextFieldBairro.setEnabled(false);
                                    jTextFieldNumero.setEnabled(false);
                                    jFormattedTextFieldCEP.setEnabled(false);
                                    jTextFieldComplemento.setEnabled(false);
                                    jTextFieldCidade.setEnabled(false);
                                    jTextFieldEstado.setEnabled(false);

                                    jLabelCPF.setEnabled(false);
                                    jLabelTelefone.setEnabled(false);
                                    jLabelCEP.setEnabled(false);
                                    jLabelCargo.setEnabled(false);
                                    jLabelRG.setEnabled(false);
                                    jLabelNascimento.setEnabled(false);
                                    jLabelUsuario.setEnabled(false);
                                    jLabelSenha.setEnabled(false);
                                    jLabelConfirmarSenha.setEnabled(false);

                                    //LABELS DE ENDEREÇO
                                    jLabelRua.setEnabled(false);
                                    jLabelBairro.setEnabled(false);
                                    jLabelNumero.setEnabled(false);
                                    jLabelCEP.setEnabled(false);
                                    jLabelComplemento.setEnabled(false);
                                    jLabelCidade.setEnabled(false);
                                    jLabelEstado.setEnabled(false);

                                    //Seteres de texto
                                    jTextFieldCod.setText(null);
                                    jFormattedTextFieldCPF.setText(null);
                                    jTextFieldNome.setText(null);

                                    jFormattedTextFieldTelefone.setText(null);
                                    jComboBoxCargo.setSelectedIndex(0);
                                    jFormattedTextFieldRG.setText(null);
                                    jFormattedTextFieldNascimento.setText(null);
                                    jTextFieldUsuario.setText(null);
                                    jPasswordFieldSenha.setText(null);
                                    jPasswordFieldConfirmarSenha.setText(null);

                                    //CAMPOS DE ENDEREÇO
                                    jTextFieldRua.setText(null);
                                    jTextFieldBairro.setText(null);
                                    jTextFieldNumero.setText(null);
                                    jFormattedTextFieldCEP.setText(null);
                                    jTextFieldComplemento.setText(null);
                                    jTextFieldCidade.setText(null);
                                    jTextFieldEstado.setText(null);

                                    preencherTabela("select * from funcionarios join enderecos on enderecos.cod_end = funcionarios.cod_end order by nomefunc");
                                }
                            }
                        } else {
                            //JOptionPane.showMessageDialog(rootPane, "CPF Inválido");
                            JOptionPane.showMessageDialog(rootPane, "Insira um CPF válido");
                            jFormattedTextFieldCPF.setText("");
                            cpf = "";
                            jFormattedTextFieldCPF.requestFocus();
                        }
                    }
                }
            }
    }//GEN-LAST:event_jButtonSalvarActionPerformed
        else {
            String senha = jPasswordFieldSenha.getText().trim();
            //quando o campo está em branco
            if ((String) jComboBoxCargo.getSelectedItem() == (String) jComboBoxCargo.getItemAt(0)) {
                JOptionPane.showMessageDialog(null, "Escolha um cargo para continuar", "Atenção!", 2);
            } else if (jTextFieldNome.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Insira um nome para prosseguir!", "Atenção!", 2);
                jTextFieldNome.requestFocus();
            } else if (jTextFieldNome.getText() != null) {
                try {
                    int num = Integer.parseInt(jTextFieldNome.getText());
                    JOptionPane.showMessageDialog(null, "Por favor, insira um nome válido! (Não pode ser apenas números)");
                } catch (NumberFormatException e) {

                    if (jFormattedTextFieldCPF.getText().equals("   .   .   -  ")) {
                        JOptionPane.showMessageDialog(null, "Insira um CPF para prosseguir!", "Atenção!", 2);
                        jFormattedTextFieldCPF.requestFocus();
                    } else if (jFormattedTextFieldRG.getText() != null) {
                        //JOptionPane.showMessageDialog(rootPane, jFormattedTextFieldCPF.getText());
                        String parte1 = jFormattedTextFieldCPF.getText().substring(0, 3);
                        String parte2 = jFormattedTextFieldCPF.getText().substring(4, 7);
                        String parte3 = jFormattedTextFieldCPF.getText().substring(8, 11);
                        String parte4 = jFormattedTextFieldCPF.getText().substring(12, 14);
                        String cpf = parte1 + parte2 + parte3 + parte4;
                        //JOptionPane.showMessageDialog(rootPane, jFormattedTextFieldCPF.getText());
                        verificaCpf.validaCpf(cpf);
                        cpf = "";

                        String verifica = String.valueOf(verificaCpf.isValido());

                        if (verifica == "true") {
                            /*JOptionPane.showMessageDialog(rootPane, "CPF Válido");
                            jFormattedTextFieldCPF.setText("");
                            jFormattedTextFieldCPF.requestFocus();*/
                            if (jFormattedTextFieldTelefone.getText().equals("(  )      -    ")) {
                                JOptionPane.showMessageDialog(null, "Insira um telefone para prosseguir!", "Atenção!", 2);
                                jFormattedTextFieldTelefone.requestFocus();
                            } else if (jFormattedTextFieldRG.getText().equals("  .   .   -  ")) {
                                JOptionPane.showMessageDialog(null, "Insira um RG para prosseguir!", "Atenção!", 2);
                            } else if (jFormattedTextFieldNascimento.getText().equals("  /  /    ")) {
                                JOptionPane.showMessageDialog(null, "Insira um nascimento para prosseguir!", "Atenção!", 2);
                            } else if (jTextFieldUsuario.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira um usuário para prosseguir!", "Atenção!", 2);
                            } else if (jPasswordFieldSenha.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira uma senha para prosseguir!", "Atenção!", 2);
                            } else if (jFormattedTextFieldCEP.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira um CEP para prosseguir!", "Atenção!", 2);
                                jFormattedTextFieldCEP.requestFocus();
                            } else if (jTextFieldRua.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira uma rua para prosseguir!", "Atenção!", 2);
                            } else if (jTextFieldNumero.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira um número para prosseguir!", "Atenção!", 2);
                            } else if (jTextFieldBairro.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira um bairro para prosseguir!", "Atenção!", 2);
                            } else if (jTextFieldCidade.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira uma cidade para prosseguir!", "Atenção!", 2);
                            } else if (jTextFieldEstado.getText().trim().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Insira um estado para prosseguir!", "Atenção!", 2);
                            } else if (!jPasswordFieldSenha.getText().equals(jPasswordFieldConfirmarSenha.getText())) {
                                JOptionPane.showMessageDialog(null, "As senhas não coincidem!\nVerifique a ortografia.", "Atenção!", 2);
                            } else {
                                String data = jFormattedTextFieldNascimento.getText();
                                DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                                Date date = null;
                                try {
                                    date = new java.sql.Date(((java.util.Date) formatter.parse(data)).getTime());
                                } catch (ParseException ex) {
                                    JOptionPane.showMessageDialog(null, "Erro na conversão da data \n" + ex);
                                }

                                CriptografaSenha criptografaSenha = new CriptografaSenha();
                                criptografaSenha.setSenha(senha);
                                String senhaCriptografada = criptografaSenha.getSenha();

                                beansfuncionario.setCargo((String) jComboBoxCargo.getSelectedItem());
                                beansfuncionario.setCod_func(Integer.parseInt(jTextFieldCod.getText()));
                                beansfuncionario.setCodigoend(Integer.parseInt(jTextFieldCodEnd.getText()));
                                beansfuncionario.setNome(jTextFieldNome.getText());
                                beansfuncionario.setNascimento(date);
                                beansfuncionario.setCPF(jFormattedTextFieldCPF.getText());
                                beansfuncionario.setTelefone(jFormattedTextFieldTelefone.getText());
                                beansfuncionario.setRG(jFormattedTextFieldRG.getText());
                                beansfuncionario.setUsuario(jTextFieldUsuario.getText());
                                beansfuncionario.setSenha(senhaCriptografada);

                                beansfuncionario.setRua(jTextFieldRua.getText());
                                beansfuncionario.setBairro(jTextFieldBairro.getText());
                                beansfuncionario.setNumero(Integer.parseInt(jTextFieldNumero.getText()));
                                beansfuncionario.setCep(Integer.parseInt(jFormattedTextFieldCEP.getText()));
                                beansfuncionario.setComplemento(jTextFieldComplemento.getText());
                                beansfuncionario.setCidade(jTextFieldCidade.getText());
                                beansfuncionario.setEstado(jTextFieldEstado.getText());

                                int teste = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja editar os dados desse funcionário? \n" + "Cargo: " + beansfuncionario.getCargo() + "\n" + "Código: " + beansfuncionario.getCod_func() + "\n" + "Nome: " + beansfuncionario.getNome() + "\n" + "CPF: " + beansfuncionario.getCPF() + "\n" + "Telefone: " + beansfuncionario.getTelefone() + "\n" + "RG: " + beansfuncionario.getRG() + "\n" + "Nascimento: " + beansfuncionario.getNascimento(), "Atenção!", 0, 0);
                                if (teste == 0) {
                                    daofuncionario.editar(beansfuncionario);
                                    //daoUsuario.editar(beansUsuario);

                                    //Ativadores
                                    jButtonNovo.setEnabled(true);
                                    jButtonPesquisar.setEnabled(true);
                                    jButtonSair.setEnabled(true);
                                    
                                    jScrollPaneFuncionarios.setEnabled(true);
                                    jTableFuncionarios.setEnabled(true);

                                    //Desativadores
                                    jButtonCancelar.setEnabled(false);
                                    jButtonEditar.setEnabled(false);
                                    jButtonDel.setEnabled(false);
                                    jButtonSalvar.setEnabled(false);

                                    jFormattedTextFieldCPF.setEnabled(false);
                                    jFormattedTextFieldTelefone.setEnabled(false);
                                    jComboBoxCargo.setEnabled(false);
                                    jFormattedTextFieldRG.setEnabled(false);
                                    jFormattedTextFieldNascimento.setEnabled(false);
                                    jTextFieldUsuario.setEnabled(false);
                                    jPasswordFieldSenha.setEnabled(false);
                                    jPasswordFieldConfirmarSenha.setEnabled(false);

                                    //CAMPOS DE ENDEREÇO
                                    jTextFieldRua.setEnabled(false);
                                    jTextFieldBairro.setEnabled(false);
                                    jTextFieldNumero.setEnabled(false);
                                    jFormattedTextFieldCEP.setEnabled(false);
                                    jTextFieldComplemento.setEnabled(false);
                                    jTextFieldCidade.setEnabled(false);
                                    jTextFieldEstado.setEnabled(false);

                                    jLabelCPF.setEnabled(false);
                                    jLabelTelefone.setEnabled(false);
                                    jLabelCEP.setEnabled(false);
                                    jLabelCargo.setEnabled(false);
                                    jLabelRG.setEnabled(false);
                                    jLabelNascimento.setEnabled(false);
                                    jLabelUsuario.setEnabled(false);
                                    jLabelSenha.setEnabled(false);
                                    jLabelConfirmarSenha.setEnabled(false);

                                    //LABELS DE ENDEREÇO
                                    jLabelRua.setEnabled(false);
                                    jLabelBairro.setEnabled(false);
                                    jLabelNumero.setEnabled(false);
                                    jLabelCEP.setEnabled(false);
                                    jLabelComplemento.setEnabled(false);
                                    jLabelCidade.setEnabled(false);
                                    jLabelEstado.setEnabled(false);

                                    //Seteres de texto
                                    jTextFieldCod.setText(null);
                                    jFormattedTextFieldCPF.setText(null);
                                    jTextFieldNome.setText(null);

                                    jFormattedTextFieldTelefone.setText(null);
                                    jComboBoxCargo.setSelectedIndex(0);
                                    jFormattedTextFieldRG.setText(null);
                                    jFormattedTextFieldNascimento.setText(null);
                                    jTextFieldUsuario.setText(null);
                                    jPasswordFieldSenha.setText(null);
                                    jPasswordFieldConfirmarSenha.setText(null);

                                    //CAMPOS DE ENDEREÇO
                                    jTextFieldRua.setText(null);
                                    jTextFieldBairro.setText(null);
                                    jTextFieldNumero.setText(null);
                                    jFormattedTextFieldCEP.setText(null);
                                    jTextFieldComplemento.setText(null);
                                    jTextFieldCidade.setText(null);
                                    jTextFieldEstado.setText(null);

                                    preencherTabela("select * from funcionarios join enderecos on enderecos.cod_end = funcionarios.cod_end order by nomefunc");
                                }
                            }
                        } else {
                            //JOptionPane.showMessageDialog(rootPane, "CPF Inválido");
                            JOptionPane.showMessageDialog(rootPane, "Insira um CPF válido");
                            jFormattedTextFieldCPF.setText("");
                            cpf = "";
                            jFormattedTextFieldCPF.requestFocus();
                        }
                    }
                }
            }
        }
    }

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        preencherTabela("select * from funcionarios join enderecos on enderecos.cod_end = funcionarios.cod_end where nomefunc like '%" + jTextFieldNome.getText() + "%' order by nomefunc");
        beansfuncionario.setPesquisar(jTextFieldNome.getText());

        _beansfuncionario.setCep(0);
        _beansfuncionario.setCPF("");
        _beansfuncionario.setCod_func(0);
        _beansfuncionario.setNome("");
        _beansfuncionario.setTelefone("");
        _beansfuncionario.setCargo("Escolha um abaixo");
        _beansfuncionario.setRG("");
        _beansfuncionario.setNascimento(null);

        _beansfuncionario = daofuncionario.buscaFuncionario(beansfuncionario);

        //Seteres de texto
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String nascimento = dateFormat.format(_beansfuncionario.getNascimento());

        jTextFieldCod.setText(Integer.toString(_beansfuncionario.getCod_func()));
        jTextFieldNome.setText(_beansfuncionario.getNome());

        jFormattedTextFieldCEP.setText(String.valueOf(_beansfuncionario.getCep()));
        jFormattedTextFieldTelefone.setText(String.valueOf(_beansfuncionario.getTelefone()));
        jFormattedTextFieldRG.setText(_beansfuncionario.getRG());
        jFormattedTextFieldNascimento.setText(nascimento);

        jTextFieldUsuario.setText(_beansfuncionario.getUsuario());

        jFormattedTextFieldCPF.setText(_beansfuncionario.getCPF());
        jTextFieldRua.setText(Integer.toString(_beansfuncionario.getCep()));
        jTextFieldNumero.setText(Integer.toString(_beansfuncionario.getNumero()));
        jTextFieldBairro.setText(_beansfuncionario.getBairro());
        jTextFieldComplemento.setText(_beansfuncionario.getComplemento());
        jTextFieldEstado.setText(_beansfuncionario.getEstado());
        jTextFieldCidade.setText(_beansfuncionario.getCidade());

        if (_beansfuncionario.getCargo().equals("")) {
            jComboBoxCargo.setSelectedIndex(0);
        } else {
            jComboBoxCargo.setSelectedItem(_beansfuncionario.getCargo());
        }

        //Ativadores
        //CAMPOS DE ENDEREÇO
        jTextFieldRua.setEnabled(true);
        jTextFieldBairro.setEnabled(true);
        jTextFieldNumero.setEnabled(true);
        jFormattedTextFieldCEP.setEnabled(true);
        jTextFieldComplemento.setEnabled(true);
        jTextFieldCidade.setEnabled(true);
        jTextFieldEstado.setEnabled(true);

        jFormattedTextFieldCPF.setEnabled(true);
        jFormattedTextFieldNascimento.setEnabled(true);
        jFormattedTextFieldRG.setEnabled(true);
        jComboBoxCargo.setEnabled(true);
        jTextFieldNome.setEnabled(true);
        jFormattedTextFieldTelefone.setEnabled(true);
        jTextFieldCod.setEnabled(true);
        jTextFieldUsuario.setEnabled(true);
        jPasswordFieldSenha.setEnabled(true);

        jLabelCPF.setEnabled(true);
        jLabelCod.setEnabled(true);
        jLabelNome.setEnabled(true);
        jLabelTelefone.setEnabled(true);
        jLabelCargo.setEnabled(true);
        jLabelRG.setEnabled(true);
        jLabelNascimento.setEnabled(true);
        jLabelUsuario.setEnabled(true);
        jLabelSenha.setEnabled(true);

        //LABELS DE ENDEREÇO
        jLabelRua.setEnabled(true);
        jLabelBairro.setEnabled(true);
        jLabelNumero.setEnabled(true);
        jLabelCEP.setEnabled(true);
        jLabelComplemento.setEnabled(true);
        jLabelCidade.setEnabled(true);
        jLabelEstado.setEnabled(true);

        jButtonEditar.setEnabled(true);
        jButtonDel.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        //Desativadores
        jButtonNovo.setEnabled(false);
        jButtonPesquisar.setEnabled(false);

        jFormattedTextFieldCPF.setEditable(false);
        jTextFieldNome.setEditable(false);
        jFormattedTextFieldTelefone.setEditable(false);
        jFormattedTextFieldRG.setEditable(false);
        jFormattedTextFieldNascimento.setEditable(false);
        jTextFieldUsuario.setEditable(false);
        jPasswordFieldSenha.setEditable(false);
        
        //SETERES DE TEXTO
        //CAMPOS DE ENDEREÇO
        jTextFieldRua.setEditable(false);
        jTextFieldBairro.setEditable(false);
        jTextFieldNumero.setEditable(false);
        jFormattedTextFieldCEP.setEditable(false);
        jTextFieldComplemento.setEditable(false);
        jTextFieldCidade.setEditable(false);
        jTextFieldEstado.setEditable(false);
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        //Ativadores
        jTextFieldNome.setEditable(true);
        jTextFieldNome.setEnabled(true);

        jButtonNovo.setEnabled(true);
        jButtonPesquisar.setEnabled(true);
        jLabelNome.setEnabled(true);
        jButtonSair.setEnabled(true);
        
        jScrollPaneFuncionarios.setEnabled(true);
        jTableFuncionarios.setEnabled(true);

        //Desativadores
        jLabelCPF.setEnabled(false);
        jLabelCod.setEnabled(false);
        jLabelTelefone.setEnabled(false);
        jLabelCargo.setEnabled(false);
        jLabelRG.setEnabled(false);
        jLabelNascimento.setEnabled(false);
        jLabelUsuario.setEnabled(false);
        jLabelSenha.setEnabled(false);
        jLabelConfirmarSenha.setEnabled(false);

        //LABELS DE ENDEREÇO
        jLabelRua.setEnabled(false);
        jLabelBairro.setEnabled(false);
        jLabelNumero.setEnabled(false);
        jLabelCEP.setEnabled(false);
        jLabelComplemento.setEnabled(false);
        jLabelCidade.setEnabled(false);
        jLabelEstado.setEnabled(false);

        jFormattedTextFieldCPF.setEnabled(false);
        jTextFieldCod.setEnabled(false);
        jFormattedTextFieldTelefone.setEnabled(false);
        jComboBoxCargo.setEnabled(false);
        jFormattedTextFieldRG.setEnabled(false);
        jFormattedTextFieldNascimento.setEnabled(false);
        jTextFieldUsuario.setEnabled(false);
        jPasswordFieldSenha.setEnabled(false);
        jPasswordFieldConfirmarSenha.setEnabled(false);

        //CAMPOS DE ENDEREÇO
        jTextFieldRua.setEnabled(false);
        jTextFieldBairro.setEnabled(false);
        jTextFieldNumero.setEnabled(false);
        jFormattedTextFieldCEP.setEnabled(false);
        jTextFieldComplemento.setEnabled(false);
        jTextFieldCidade.setEnabled(false);
        jTextFieldEstado.setEnabled(false);

        jButtonSalvar.setEnabled(false);
        jButtonCancelar.setEnabled(false);
        jButtonEditar.setEnabled(false);
        jButtonDel.setEnabled(false);

        //limpar campos de texto
        jTextFieldCod.setText(null);
        jFormattedTextFieldCPF.setText(null);
        jTextFieldNome.setText(null);
        jFormattedTextFieldTelefone.setText(null);
        jComboBoxCargo.setSelectedIndex(0);
        jFormattedTextFieldRG.setText(null);
        jFormattedTextFieldNascimento.setText(null);
        jTextFieldUsuario.setText(null);
        jPasswordFieldSenha.setText(null);
        jPasswordFieldConfirmarSenha.setText(null);

        //CAMPOS DE ENDEREÇO
        jTextFieldRua.setText(null);
        jTextFieldBairro.setText(null);
        jTextFieldNumero.setText(null);
        jFormattedTextFieldCEP.setText(null);
        jTextFieldComplemento.setText(null);
        jTextFieldCidade.setText(null);
        jTextFieldEstado.setText(null);

        //coloca o foco no campo "nome" após cancelar
        jTextFieldNome.requestFocus();

        preencherTabela("select * from funcionarios join enderecos on enderecos.cod_end = funcionarios.cod_end order by nomefunc");
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        // TODO add your handling code here:
        TelaPrincipal telaPrincipal = new TelaPrincipal(user, permissao, nome);
        telaPrincipal.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        // TODO add your handling code here:
        beansfuncionario.setCod_func(Integer.parseInt(jTextFieldCod.getText()));
        beansfuncionario.setCodigoend(Integer.parseInt(jTextFieldCodEnd.getText()));

        int teste = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir os dados desse funcionário? \n" + "Cargo: " + beansfuncionario.getCargo() + "\n" + "Código: " + beansfuncionario.getCod_func() + "\n" + "Nome: " + beansfuncionario.getNome() + "\n" + "CPF: " + beansfuncionario.getCPF() + "\n" + "Telefone: " + beansfuncionario.getTelefone() + "\n" + "RG: " + beansfuncionario.getRG() + "\n" + "Nascimento: " + beansfuncionario.getNascimento(), "Atenção!", 0, 0);
        if (teste == 0) {
            daofuncionario.excluir(beansfuncionario);

            //Ativadores
            jButtonNovo.setEnabled(true);
            jButtonPesquisar.setEnabled(true);
            jTextFieldNome.setEditable(true);
            jButtonSair.setEnabled(true);

            //Desativadores
            jButtonCancelar.setEnabled(false);
            jButtonEditar.setEnabled(false);
            jButtonDel.setEnabled(false);

            jFormattedTextFieldCPF.setEnabled(false);
            jFormattedTextFieldTelefone.setEnabled(false);
            jFormattedTextFieldCEP.setEnabled(false);
            jComboBoxCargo.setEnabled(false);
            jFormattedTextFieldRG.setEnabled(false);
            jFormattedTextFieldNascimento.setEnabled(false);
            jTextFieldUsuario.setEnabled(false);
            jPasswordFieldSenha.setEnabled(false);
            jPasswordFieldConfirmarSenha.setEnabled(false);
            
            //CAMPOS DE ENDEREÇO
            jTextFieldRua.setEnabled(false);
            jTextFieldBairro.setEnabled(false);
            jTextFieldNumero.setEnabled(false);
            jFormattedTextFieldCEP.setEnabled(false);
            jTextFieldComplemento.setEnabled(false);
            jTextFieldCidade.setEnabled(false);
            jTextFieldEstado.setEnabled(false);

            jLabelCPF.setEnabled(false);
            jLabelTelefone.setEnabled(false);
            jLabelCEP.setEnabled(false);
            jLabelCargo.setEnabled(false);
            jLabelRG.setEnabled(false);
            jLabelNascimento.setEnabled(false);
            jLabelUsuario.setEnabled(false);
            jLabelSenha.setEnabled(false);
            
            //LABELS DE ENDEREÇO
            jLabelRua.setEnabled(false);
            jLabelBairro.setEnabled(false);
            jLabelNumero.setEnabled(false);
            jLabelCEP.setEnabled(false);
            jLabelComplemento.setEnabled(false);
            jLabelCidade.setEnabled(false);
            jLabelEstado.setEnabled(false);

            //Seteres de texto
            jTextFieldCod.setText(null);
            jFormattedTextFieldCPF.setText(null);
            jTextFieldNome.setText(null);
            jTextFieldUsuario.setText(null);
            jPasswordFieldSenha.setText(null);
            jPasswordFieldConfirmarSenha.setText(null);

            jFormattedTextFieldTelefone.setText(null);
            jComboBoxCargo.setSelectedIndex(0);
            jFormattedTextFieldRG.setText(null);
            jFormattedTextFieldNascimento.setText(null);
            
            //CAMPOS DE ENDEREÇO
            jFormattedTextFieldCEP.setText(null);
            jTextFieldRua.setText(null);
            jTextFieldBairro.setText(null);
            jTextFieldNumero.setText(null);
            jFormattedTextFieldCEP.setText(null);
            jTextFieldComplemento.setText(null);
            jTextFieldCidade.setText(null);
            jTextFieldEstado.setText(null);

            preencherTabela("select * from funcionarios join enderecos on enderecos.cod_end = funcionarios.cod_end order by nomefunc");
        }
    }//GEN-LAST:event_jButtonDelActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // TODO add your handling code here:
        flag = 2;

        //Ativadores
        jPasswordFieldConfirmarSenha.setEditable(true);
        jPasswordFieldConfirmarSenha.setEnabled(true);
        jLabelConfirmarSenha.setEnabled(true);

        jFormattedTextFieldCEP.setEditable(true);
        jFormattedTextFieldCPF.setEditable(true);
        jTextFieldNome.setEditable(true);
        jFormattedTextFieldTelefone.setEditable(true);
        jFormattedTextFieldRG.setEditable(true);
        jFormattedTextFieldNascimento.setEditable(true);
        jTextFieldUsuario.setEditable(true);
        jPasswordFieldSenha.setEditable(true);

        jButtonSalvar.setEnabled(true);

        jTextFieldNome.requestFocus();

        //Desativadores
        jButtonPesquisar.setEnabled(false);
        jButtonSair.setEnabled(false);
        jButtonEditar.setEnabled(false);
        jButtonDel.setEnabled(false);
        jScrollPaneFuncionarios.setEnabled(false);
        jTableFuncionarios.setEnabled(false);
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jFormattedTextFieldNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldNascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldNascimentoActionPerformed

    private void jTableFuncionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableFuncionariosMouseClicked
        // TODO add your handling code here:
        String codigo = "" + jTableFuncionarios.getValueAt(jTableFuncionarios.getSelectedRow(), 0);
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        // abre a conexao
        conexaoBD.conectaBD();
        // excuta um string sql
        conexaoBD.executaSql("select * from funcionarios join enderecos on enderecos.cod_end = funcionarios.cod_end where funcionarios.cod_end='" + codigo + "'");

        try {
            // pega o primeiro do banco
            conexaoBD.rs.first();
            jTextFieldCodEnd.setText(Integer.toString(conexaoBD.rs.getInt("cod_end")));
            jFormattedTextFieldCPF.setText(conexaoBD.rs.getString("CPF"));
            jTextFieldCod.setText(Integer.toString(conexaoBD.rs.getInt("Cod_func")));
            jTextFieldNome.setText(conexaoBD.rs.getString("nomefunc"));
            jFormattedTextFieldRG.setText(conexaoBD.rs.getString("RG"));
            jFormattedTextFieldTelefone.setText(conexaoBD.rs.getString("telefone"));
            jFormattedTextFieldNascimento.setText(dateFormat.format(conexaoBD.rs.getDate("nascimento")));
            jComboBoxCargo.setSelectedItem(conexaoBD.rs.getString("cargo"));
            jTextFieldUsuario.setText(conexaoBD.rs.getString("usuario"));
            jFormattedTextFieldCEP.setText(conexaoBD.rs.getString("cep"));
            jTextFieldRua.setText(conexaoBD.rs.getString("rua"));
            jTextFieldNumero.setText(Integer.toString(conexaoBD.rs.getInt("numero")));
            jTextFieldBairro.setText(conexaoBD.rs.getString("bairro"));
            jTextFieldComplemento.setText(conexaoBD.rs.getString("comp"));
            jTextFieldEstado.setText(conexaoBD.rs.getString("estado"));
            jTextFieldCidade.setText(conexaoBD.rs.getString("cidade"));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao selecionar dados.\nErro: " + ex);
        }
        // fecha a conexão
        conexaoBD.desconectaBD();

        // ATIVADORES
        jButtonEditar.setEnabled(true);
        jButtonDel.setEnabled(true);
        jButtonCancelar.setEnabled(true);

        jFormattedTextFieldCPF.setEnabled(true);
        jFormattedTextFieldTelefone.setEnabled(true);
        jComboBoxCargo.setEnabled(true);
        jFormattedTextFieldRG.setEnabled(true);
        jFormattedTextFieldNascimento.setEnabled(true);
        jTextFieldCod.setEnabled(true);
        jTextFieldUsuario.setEnabled(true);
        jPasswordFieldSenha.setEnabled(true);
        jTextFieldNome.setEnabled(true);

        //CAMPOS DE ENDEREÇO
        jTextFieldRua.setEnabled(true);
        jTextFieldBairro.setEnabled(true);
        jTextFieldNumero.setEnabled(true);
        jFormattedTextFieldCEP.setEnabled(true);
        jTextFieldComplemento.setEnabled(true);
        jTextFieldCidade.setEnabled(true);
        jTextFieldEstado.setEnabled(true);

        jLabelCPF.setEnabled(true);
        jLabelCargo.setEnabled(true);
        jLabelCod.setEnabled(true);
        jLabelNascimento.setEnabled(true);
        jLabelRG.setEnabled(true);
        jLabelTelefone.setEnabled(true);
        jLabelUsuario.setEnabled(true);
        jLabelSenha.setEnabled(true);

        //LABELS DE ENDEREÇO
        jLabelRua.setEnabled(true);
        jLabelBairro.setEnabled(true);
        jLabelNumero.setEnabled(true);
        jLabelCEP.setEnabled(true);
        jLabelComplemento.setEnabled(true);
        jLabelCidade.setEnabled(true);
        jLabelEstado.setEnabled(true);

        // DESATIVADORES
        jFormattedTextFieldCPF.setEditable(false);
        jTextFieldNome.setEditable(false);
        jFormattedTextFieldTelefone.setEditable(false);
        jFormattedTextFieldRG.setEditable(false);
        jFormattedTextFieldNascimento.setEditable(false);
        jTextFieldCod.setEditable(false);
        jTextFieldUsuario.setEditable(false);
        jPasswordFieldSenha.setEditable(false);
        
        jFormattedTextFieldCEP.setEditable(false);        
        jTextFieldRua.setEditable(false);
        jTextFieldBairro.setEditable(false);
        jTextFieldNumero.setEditable(false);
        jFormattedTextFieldCEP.setEditable(false);
        jTextFieldComplemento.setEditable(false);
        jTextFieldCidade.setEditable(false);
        jTextFieldEstado.setEditable(false);

        jButtonSalvar.setEnabled(false);
        jButtonSair.setEnabled(false);
        jButtonNovo.setEnabled(false);
    }//GEN-LAST:event_jTableFuncionariosMouseClicked

    private void jComboBoxCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCargoActionPerformed

    private void jTextFieldUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUsuarioActionPerformed

    /*protected String converteDataparaString(java.sql.Date dtData){
        SimpleDateFormat out = new SimpleDateFormat("dd/MM/yyyy");
        String result = out.format(dtData.toString());
        return result;
    }
    protected Date converteStringparaData(String dtData){
        Date result = null;
        SimpleDateFormat in = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat out = new SimpleDateFormat("dd/MM/yyyy");
        try{
            result = (Date) in.parse(out.format(dtData));
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conversão da data \n"+ ex);
        }
        return result;
    }*/
    public void preencherTabela(String sql) {
        ArrayList dadosUsuario = new ArrayList();
        String colunas[] = new String[]{"Código", "Usuário", "Nome", "Cargo", "CPF", "Tel", "RG", "Nascimento", "Rua", "Número", "Bairro", "Cidade", "Estado", "Complemento", "CEP"};

        // abre a conexao
        conexaoBD.conectaBD();
        conexaoBD.executaSql(sql);

        try {
            // pega o primeiro resultado encontrado na tabela
            conexaoBD.rs.first();

            // mostra todos os dados da tabela
            do {
                dadosUsuario.add(new Object[]{
                    conexaoBD.rs.getInt("cod_end"),
                    conexaoBD.rs.getString("usuario"),
                    conexaoBD.rs.getString("nomefunc"),
                    conexaoBD.rs.getString("cargo"),
                    conexaoBD.rs.getString("CPF"),
                    conexaoBD.rs.getString("telefone"),
                    conexaoBD.rs.getString("RG"),
                    conexaoBD.rs.getDate("Nascimento"),
                    conexaoBD.rs.getString("rua"),
                    conexaoBD.rs.getInt("numero"),
                    conexaoBD.rs.getString("bairro"),
                    conexaoBD.rs.getString("cidade"),
                    conexaoBD.rs.getString("estado"),
                    conexaoBD.rs.getString("comp"),
                    conexaoBD.rs.getInt("cep")

                });
            } while (conexaoBD.rs.next());// enquanto houver dados
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher ArrayList.\nErro: " + ex);
        }

// cria uma intancia do modelo de tabela aqui nos passamos todos os objetos e o título de cada uma das colunas
        ModeloTabelaX modeloTabela = new ModeloTabelaX(dadosUsuario, colunas);

        // seta o modelo da tabela 
        jTableFuncionarios.setModel(modeloTabela);

        // CODIGO
        jTableFuncionarios.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTableFuncionarios.getColumnModel().getColumn(0).setResizable(false);

        // NOME
        jTableFuncionarios.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTableFuncionarios.getColumnModel().getColumn(1).setResizable(false);

        // CARGO
        jTableFuncionarios.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableFuncionarios.getColumnModel().getColumn(2).setResizable(false);

        // CPF
        jTableFuncionarios.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTableFuncionarios.getColumnModel().getColumn(3).setResizable(false);

        // TELEFONE
        jTableFuncionarios.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTableFuncionarios.getColumnModel().getColumn(4).setResizable(false);

        // ENDEREÇO
        jTableFuncionarios.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTableFuncionarios.getColumnModel().getColumn(5).setResizable(false);

        // CEP
        jTableFuncionarios.getColumnModel().getColumn(6).setPreferredWidth(100);
        jTableFuncionarios.getColumnModel().getColumn(6).setResizable(false);

        // RG
        jTableFuncionarios.getColumnModel().getColumn(7).setPreferredWidth(100);
        jTableFuncionarios.getColumnModel().getColumn(7).setResizable(false);

        // NASCIMENTO
        jTableFuncionarios.getColumnModel().getColumn(8).setPreferredWidth(100);
        jTableFuncionarios.getColumnModel().getColumn(8).setResizable(false);

        // não deixa reordenar os dados da tabela
        jTableFuncionarios.getTableHeader().setReorderingAllowed(false);

        // não deixa a tabela ser redimensionada
        jTableFuncionarios.setAutoResizeMode(jTableFuncionarios.AUTO_RESIZE_OFF);

        // permite selecionar apenas um dado na tabela por vez
        jTableFuncionarios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        // fecha a conexão
        conexaoBD.desconectaBD();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxCargo;
    private javax.swing.JFormattedTextField jFormattedTextFieldCEP;
    private javax.swing.JFormattedTextField jFormattedTextFieldCPF;
    private javax.swing.JFormattedTextField jFormattedTextFieldNascimento;
    private javax.swing.JFormattedTextField jFormattedTextFieldRG;
    private javax.swing.JFormattedTextField jFormattedTextFieldTelefone;
    private javax.swing.JLabel jLabelBairro;
    private javax.swing.JLabel jLabelCEP;
    private javax.swing.JLabel jLabelCPF;
    private javax.swing.JLabel jLabelCargo;
    private javax.swing.JLabel jLabelCidade;
    private javax.swing.JLabel jLabelCod;
    private javax.swing.JLabel jLabelComplemento;
    private javax.swing.JLabel jLabelConfirmarSenha;
    private javax.swing.JLabel jLabelEstado;
    private javax.swing.JLabel jLabelNascimento;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelNumero;
    private javax.swing.JLabel jLabelRG;
    private javax.swing.JLabel jLabelRua;
    private javax.swing.JLabel jLabelSenha;
    private javax.swing.JLabel jLabelTelefone;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JPanel jPanelBotoes;
    private javax.swing.JPanel jPanelFormularioEndereco;
    private javax.swing.JPanel jPanelFormularioInformacoes;
    private javax.swing.JPanel jPanelFormularioUsuario;
    private javax.swing.JPanel jPanelTabela;
    private javax.swing.JPasswordField jPasswordFieldConfirmarSenha;
    private javax.swing.JPasswordField jPasswordFieldSenha;
    private javax.swing.JScrollPane jScrollPaneFuncionarios;
    private javax.swing.JTable jTableFuncionarios;
    private javax.swing.JTextField jTextFieldBairro;
    private javax.swing.JTextField jTextFieldCidade;
    private javax.swing.JTextField jTextFieldCod;
    private javax.swing.JTextField jTextFieldCodEnd;
    private javax.swing.JTextField jTextFieldComplemento;
    private javax.swing.JTextField jTextFieldEstado;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldNumero;
    private javax.swing.JTextField jTextFieldRua;
    private javax.swing.JTextField jTextFieldUsuario;
    // End of variables declaration//GEN-END:variables
}
