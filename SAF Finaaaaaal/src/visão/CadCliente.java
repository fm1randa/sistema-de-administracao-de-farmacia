/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import modeloBeansX.BeansCliente;
import modeloConnectionX.ConectaBDX;
import modeloDaoX.DaoCliente;
import modeloBeansX.ModeloTabelaX;
/**
 *
 * @author danie
 */
public class CadCliente extends javax.swing.JFrame {
    BeansCliente _beansCliente = new BeansCliente();
    BeansCliente beansCliente = new BeansCliente();
    DaoCliente daoCliente = new DaoCliente();
    ConectaBDX conexaoBD =  new ConectaBDX();
    int flag = 0;
    String permissao;
    String user;
    String nome;
    public CadCliente(String user, String permissao, String nome) {
        this.setResizable(false);
        
        URL url = this.getClass().getResource("/icones/add-friend16.png");  
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(url); 
        this.setIconImage(iconeTitulo);
        
        initComponents();
        this.permissao = permissao;
        this.user = user;
        preencherTabela("select * from clientes order by nome_cliente");
    }

    CadCliente() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFuncionarios = new javax.swing.JTable();
        jLabelTitulo = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jButtonSair = new javax.swing.JButton();
        jPanelBotoes = new javax.swing.JPanel();
        jButtonDel = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jPanelFormulario = new javax.swing.JPanel();
        jButtonPesquisar = new javax.swing.JButton();
        jTextFieldCod = new javax.swing.JTextField();
        jLabelCod = new javax.swing.JLabel();
        jLabelCPF = new javax.swing.JLabel();
        jTextFieldCPF = new javax.swing.JTextField();
        jTextFieldEndereco = new javax.swing.JTextField();
        jLabelEndereco = new javax.swing.JLabel();
        jTextFieldTelefone = new javax.swing.JTextField();
        jLabelTelefone = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCliente = new javax.swing.JTable();

        jTableFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Cargo", "CPF", "Telefone", "Endereço", "CEP", "RG", "Nascimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableFuncionariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableFuncionarios);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administração de Clientes");
        getContentPane().setLayout(null);

        jLabelTitulo.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabelTitulo.setText("Administração de clientes");
        getContentPane().add(jLabelTitulo);
        jLabelTitulo.setBounds(30, 10, 370, 34);

        jLabelNome.setText("Nome");
        getContentPane().add(jLabelNome);
        jLabelNome.setBounds(190, 130, 90, 14);

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSair);
        jButtonSair.setBounds(20, 370, 60, 30);

        jPanelBotoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonDel.setText("Deletar");
        jButtonDel.setEnabled(false);
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });

        jButtonEditar.setText("Editar");
        jButtonEditar.setEnabled(false);
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setEnabled(false);
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotoesLayout = new javax.swing.GroupLayout(jPanelBotoes);
        jPanelBotoes.setLayout(jPanelBotoesLayout);
        jPanelBotoesLayout.setHorizontalGroup(
            jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBotoesLayout.setVerticalGroup(
            jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jButtonDel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelBotoes);
        jPanelBotoes.setBounds(10, 100, 130, 240);

        jPanelFormulario.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jTextFieldCod.setEditable(false);
        jTextFieldCod.setEnabled(false);

        jLabelCod.setText("Codigo do Cliente");
        jLabelCod.setEnabled(false);

        jLabelCPF.setText("CPF");
        jLabelCPF.setEnabled(false);

        jTextFieldCPF.setEnabled(false);

        jTextFieldEndereco.setEnabled(false);

        jLabelEndereco.setText("Endereço");
        jLabelEndereco.setEnabled(false);

        jTextFieldTelefone.setEnabled(false);
        jTextFieldTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTelefoneActionPerformed(evt);
            }
        });

        jLabelTelefone.setText("Telefone");
        jLabelTelefone.setEnabled(false);

        jTextFieldNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFormularioLayout = new javax.swing.GroupLayout(jPanelFormulario);
        jPanelFormulario.setLayout(jPanelFormularioLayout);
        jPanelFormularioLayout.setHorizontalGroup(
            jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormularioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelFormularioLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jTextFieldCod, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelCod, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 8, Short.MAX_VALUE))
        );
        jPanelFormularioLayout.setVerticalGroup(
            jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabelCod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldCod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCPF)
                .addGap(6, 6, 6)
                .addComponent(jTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelEndereco)
                .addGap(6, 6, 6)
                .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelTelefone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelFormulario);
        jPanelFormulario.setBounds(180, 60, 360, 340);

        jTableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "CPF", "Telefone", "Endereço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClienteMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCliente);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(560, 0, 400, 402);

        setSize(new java.awt.Dimension(1035, 586));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
     flag = 1;
     //Ativadores
     jTextFieldEndereco.setEnabled((true));
     jButtonSalvar.setEnabled(true);
     jButtonCancelar.setEnabled(true);
     
     jLabelCPF.setEnabled(true);
     jLabelCod.setEnabled(true);
     jLabelEndereco.setEnabled(true);
     jLabelNome.setEnabled(true);
     jLabelTelefone.setEnabled(true);
     jTextFieldCod.setEnabled(true);
     
     
     
     //Desativadores
     jButtonNovo.setEnabled(false);
     jButtonPesquisar.setEnabled(false);
     jButtonEditar.setEnabled(false);
     //habilita os campos de texto após clicar no botão "novo"
     jTextFieldCPF.setEnabled(true);
     jTextFieldNome.setEnabled(true);  
     
     jTextFieldTelefone.setEnabled(true);
     jTextFieldEndereco.setEnabled(true);
     
     jTextFieldCPF.setEditable(true);
     jTextFieldNome.setEditable(true);  
     
     jTextFieldTelefone.setEditable(true);
     jTextFieldEndereco.setEditable(true);
     
     //limpar campos de texto
        jTextFieldCod.setText(null);
        jTextFieldCPF.setText(null);
        jTextFieldNome.setText(null);
        jTextFieldEndereco.setText(null);
        
        jTextFieldTelefone.setText(null);
        
        
        
        //coloca o foco no campo "código" após criar um novo cadastro
        jTextFieldNome.requestFocus();
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jTextFieldNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeActionPerformed

    private void jTextFieldTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTelefoneActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        //jTextField_Pesquisar.requestFocus();
        if(flag == 1){
            //quando o campo está em branco
            if(jTextFieldNome.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Insira um nome para prosseguir!", "Atenção!", 2);
                jTextFieldNome.requestFocus();
            }
            else if(jTextFieldCPF.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Insira um CPF para prosseguir!", "Atenção!", 2);
                jTextFieldCPF.requestFocus();
            }
            else if(jTextFieldEndereco.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Insira um endereço para prosseguir!", "Atenção!", 2);
                jTextFieldEndereco.requestFocus();
            }
            else if(jTextFieldTelefone.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Insira um telefone para prosseguir!", "Atenção!", 2);
                jTextFieldTelefone.requestFocus();
            }
            else{
                beansCliente.setNome(jTextFieldNome.getText());
                beansCliente.setCpf(jTextFieldCPF.getText());
                beansCliente.setTelefone(jTextFieldTelefone.getText());
                beansCliente.setEmail(jTextFieldEndereco.getText());
                daoCliente.salvar(beansCliente);

                //Ativadores
                jButtonNovo.setEnabled(true);
                jButtonPesquisar.setEnabled(true);

                //Desativadores
                jButtonCancelar.setEnabled(false);
                jButtonEditar.setEnabled(false);
                jButtonDel.setEnabled(false);
                jButtonSalvar.setEnabled(false);

                jTextFieldEndereco.setEnabled(false);
                jTextFieldCPF.setEnabled(false);
                jTextFieldTelefone.setEnabled(false);
                
                

                jLabelEndereco.setEnabled(false);
                jLabelCPF.setEnabled(false);
                jLabelTelefone.setEnabled(false);
                
                

                //Seteres de texto
                jTextFieldCod.setText(null);
                jTextFieldCPF.setText(null);
                jTextFieldNome.setText(null);
                jTextFieldEndereco.setText(null);
                
                jTextFieldTelefone.setText(null);
                preencherTabela("select * from clientes order by nome_cliente");

            }
    }//GEN-LAST:event_jButtonSalvarActionPerformed
        else{
            beansCliente.setNome(jTextFieldNome.getText());
            beansCliente.setCpf(jTextFieldCPF.getText());
            beansCliente.setEmail(jTextFieldEndereco.getText());
            beansCliente.setTelefone(jTextFieldTelefone.getText());
            
            int teste = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja editar os dados desse funcionário? \n"+ "Código: "+ beansCliente.getCodigo()+ "\n" + "Nome: "+ beansCliente.getNome()+ "\n"+ "CPF: "+ beansCliente.getCpf()+ "\n"+ "Endereço: "+ beansCliente.getEmail()+ "\n"+ "Telefone: "+ beansCliente.getTelefone(), "Atenção!", 0, 0);
            if(teste == 0){
                daoCliente.editar(beansCliente);

                //Ativadores
                jButtonNovo.setEnabled(true);
                jButtonPesquisar.setEnabled(true);

                //Desativadores
                jButtonCancelar.setEnabled(false);
                jButtonEditar.setEnabled(false);
                jButtonDel.setEnabled(false);
                jButtonSalvar.setEnabled(false);

                jTextFieldEndereco.setEnabled(false);
                jTextFieldCPF.setEnabled(false);
                jTextFieldTelefone.setEnabled(false);
                
                

                jLabelEndereco.setEnabled(false);
                jLabelCPF.setEnabled(false);
                jLabelTelefone.setEnabled(false);
                
                
                
                //Seteres de texto
                jTextFieldCod.setText(null);
                jTextFieldCPF.setText(null);
                jTextFieldNome.setText(null);
                
                jTextFieldEndereco.setText(null);
                jTextFieldTelefone.setText(null);
                
                preencherTabela("select * from clientes order by nome_cliente");
            }
        }
    }
    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed

    beansCliente.setPesquisar(jTextFieldNome.getText());

    _beansCliente.setCpf("");
    _beansCliente.setCodigo(0);
    _beansCliente.setEmail("");
    _beansCliente.setNome("");
    _beansCliente.setTelefone("");

    _beansCliente = daoCliente.buscaCliente(beansCliente);

    //Seteres de texto
    jTextFieldCod.setText(Integer.toString(_beansCliente.getCodigo()));
    jTextFieldNome.setText(_beansCliente.getNome());
    jTextFieldCPF.setText(String.valueOf(_beansCliente.getCpf())); 
    jTextFieldTelefone.setText(String.valueOf(_beansCliente.getTelefone()));
    jTextFieldEndereco.setText(_beansCliente.getEmail());

    //Ativadores
    
    jTextFieldCPF.setEnabled(true);
    jTextFieldEndereco.setEnabled(true);
    jTextFieldNome.setEnabled(true);
    jTextFieldTelefone.setEnabled(true);
    jTextFieldCod.setEnabled(true);
    
    jLabelCPF.setEnabled(true);
    jLabelCod.setEnabled(true);
    jLabelEndereco.setEnabled(true);
    jLabelNome.setEnabled(true);
    jLabelTelefone.setEnabled(true);
    
    

    jButtonEditar.setEnabled(true);
    jButtonDel.setEnabled(true);
    jButtonCancelar.setEnabled(true);
    //Desativadores
    jButtonNovo.setEnabled(false);
    jButtonPesquisar.setEnabled(false);

    jTextFieldCPF.setEditable(false);
    jTextFieldEndereco.setEditable(false);
    jTextFieldNome.setEditable(false);
    jTextFieldTelefone.setEditable(false);
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
    //Ativadores
    jTextFieldNome.setEditable(true);
    jTextFieldNome.setEnabled(true);

    jButtonNovo.setEnabled(true);
    jButtonPesquisar.setEnabled(true);
    jLabelNome.setEnabled(true);

    //Desativadores
    
    jLabelCPF.setEnabled(false);
    jLabelCod.setEnabled(false);
    jLabelEndereco.setEnabled(false);
    jLabelTelefone.setEnabled(false);
    

    jTextFieldCPF.setEnabled(false);
    
    jTextFieldCod.setEnabled(false);
    jTextFieldTelefone.setEnabled(false);
    jTextFieldEndereco.setEnabled(false);
    

    jButtonSalvar.setEnabled(false);
    jButtonCancelar.setEnabled(false);
    jButtonEditar.setEnabled(false);
    jButtonDel.setEnabled(false);



    //limpar campos de texto
    jTextFieldCod.setText(null);
    jTextFieldCPF.setText(null);
    jTextFieldNome.setText(null);
    
    jTextFieldEndereco.setText(null);
    jTextFieldTelefone.setText(null);
    


    //coloca o foco no campo "nome" após cancelar
    jTextFieldNome.requestFocus();
    preencherTabela("select * from clientes order by nome_cliente");
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        // TODO add your handling code here:
        TelaPrincipal telaPrincipal = new TelaPrincipal(user, permissao, nome);
        telaPrincipal.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        // TODO add your handling code here:
        beansCliente.setCodigo(Integer.parseInt(jTextFieldCod.getText()));
        
        int teste = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir os dados desse funcionário? \n"+ "Código: "+ beansCliente.getCodigo()+ "\n" + "Nome: "+ beansCliente.getNome()+ "\n"+ "CPF: "+ beansCliente.getCpf()+ "\n"+ "Endereço: "+ beansCliente.getEmail()+ "Telefone: "+ beansCliente.getTelefone(), "Atenção!", 0, 0);
        if(teste == 0){
            daoCliente.excluir(beansCliente);
            
            //Ativadores
            jButtonNovo.setEnabled(true);
            jButtonPesquisar.setEnabled(true);
            jTextFieldNome.setEditable(true);
            
            //Desativadores
            jButtonCancelar.setEnabled(false);
            jButtonEditar.setEnabled(false);
            jButtonDel.setEnabled(false);
            
            jTextFieldEndereco.setEnabled(false);
            jTextFieldCPF.setEnabled(false);
            jTextFieldTelefone.setEnabled(false);
            
            
            
            jLabelEndereco.setEnabled(false);
            jLabelCPF.setEnabled(false);
            jLabelTelefone.setEnabled(false);
            
            
            
            //Seteres de texto
            jTextFieldCod.setText(null);
            jTextFieldCPF.setText(null);
            jTextFieldNome.setText(null);
            
            jTextFieldEndereco.setText(null);
            jTextFieldTelefone.setText(null);
            
            preencherTabela("select * from clientes order by nome_cliente");
        }
    }//GEN-LAST:event_jButtonDelActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // TODO add your handling code here:
        flag = 2;
        
        //Ativadores
        
        
        jTextFieldCPF.setEditable(true);
        jTextFieldEndereco.setEditable(true);
        jTextFieldNome.setEditable(true);
        jTextFieldTelefone.setEditable(true);
        
        jButtonSalvar.setEnabled(true);
                
        
        jTextFieldNome.requestFocus();
        
        //Desativadores
        jButtonPesquisar.setEnabled(false);
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jTableFuncionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableFuncionariosMouseClicked
        // TODO add your handling code here:
        String codigo = "" + jTableCliente.getValueAt(jTableCliente.getSelectedRow(), 0);

        // abre a conexao
        conexaoBD.conectaBD();
        // excuta um string sql
        conexaoBD.executaSql("select * from clientes where cod_cliente='" + codigo+ "'");

        try {
            // pega o primeiro do banco
            conexaoBD.rs.first();
            jTextFieldCPF.setText(Integer.toString(conexaoBD.rs.getInt("cpf_cliente")));
            jTextFieldCod.setText(Integer.toString(conexaoBD.rs.getInt("cod_cliente")));
            jTextFieldEndereco.setText(conexaoBD.rs.getString("end_cliente"));
            jTextFieldNome.setText(conexaoBD.rs.getString("nome_cliente"));
            jTextFieldTelefone.setText(Integer.toString(conexaoBD.rs.getInt("tel_cliente")));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao selecionar dados.\nErro: " + ex);
        }
        // fecha a conexão
        conexaoBD.desconectaBD();

        // ATIVADORES
        jButtonEditar.setEnabled(true);
        jButtonDel.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jTextFieldEndereco.setEnabled(true);
        jTextFieldCPF.setEnabled(true);
        jTextFieldTelefone.setEnabled(true);
        jTextFieldCod.setEnabled(true);
        jLabelCPF.setEnabled(true);
        jLabelCod.setEnabled(true);
        jLabelEndereco.setEnabled(true);
        jLabelTelefone.setEnabled(true);

        // DESATIVADORES
        jTextFieldCPF.setEditable(false);
        jTextFieldNome.setEditable(false);
        jTextFieldTelefone.setEditable(false);
        jTextFieldEndereco.setEditable(false);
        jTextFieldCod.setEditable(false);

        jButtonSalvar.setEnabled(false);
        jButtonSair.setEnabled(false);
        jButtonNovo.setEnabled(false);
    }//GEN-LAST:event_jTableFuncionariosMouseClicked

    private void jTableClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClienteMouseClicked
        // TODO add your handling code here:
        String codigo = "" + jTableCliente.getValueAt(jTableCliente.getSelectedRow(), 0);
        // abre a conexao
        conexaoBD.conectaBD();
        // excuta um string sql
        conexaoBD.executaSql("select * from clientes where cod_cliente='" + codigo+ "'");

        try {
            // pega o primeiro do banco
            conexaoBD.rs.first();
            jTextFieldCPF.setText(Integer.toString(conexaoBD.rs.getInt("cpf_cliente")));
            jTextFieldCod.setText(Integer.toString(conexaoBD.rs.getInt("cod_cliente")));
            jTextFieldEndereco.setText(conexaoBD.rs.getString("end_cliente"));
            jTextFieldNome.setText(conexaoBD.rs.getString("nome_cliente"));
            jTextFieldTelefone.setText(Integer.toString(conexaoBD.rs.getInt("tel_cliente")));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao selecionar dados.\nErro: " + ex);
        }
        // fecha a conexão
        conexaoBD.desconectaBD();

        // ATIVADORES
        jButtonEditar.setEnabled(true);
        jButtonDel.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jTextFieldEndereco.setEnabled(true);
        jTextFieldCPF.setEnabled(true);
        jTextFieldTelefone.setEnabled(true);
        jTextFieldCod.setEnabled(true);
        jLabelCPF.setEnabled(true);
        jLabelCod.setEnabled(true);
        jLabelEndereco.setEnabled(true);
        jLabelTelefone.setEnabled(true);

        // DESATIVADORES
        jTextFieldCPF.setEditable(false);
        jTextFieldNome.setEditable(false);
        jTextFieldTelefone.setEditable(false);
        jTextFieldEndereco.setEditable(false);
        jTextFieldCod.setEditable(false);

        jButtonSalvar.setEnabled(false);
        jButtonSair.setEnabled(false);
        jButtonNovo.setEnabled(false);
    }//GEN-LAST:event_jTableClienteMouseClicked
    public void preencherTabela(String sql){
        ArrayList dadosCliente = new ArrayList();
        String colunas[] = new String[]{"Código", "Nome", "CPF", "Tel", "Endereço"};
        
        // abre a conexao
        conexaoBD.conectaBD();
        conexaoBD.executaSql(sql);
        
        try {            
            // pega o primeiro resultado encontrado na tabela
            conexaoBD.rs.first();
            
            // mostra todos os dados da tabela
            do{
                dadosCliente.add(new Object[]{
                    conexaoBD.rs.getInt("cod_cliente"),
                    conexaoBD.rs.getString("nome_cliente"),
                    conexaoBD.rs.getInt("cpf_cliente"),
                    conexaoBD.rs.getInt("tel_cliente"),
                    conexaoBD.rs.getString("end_cliente")
                    
                });
            }while(conexaoBD.rs.next());// enquanto houver dados
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher ArrayList.\nErro: " + ex);
        }
        
// cria uma intancia do modelo de tabela aqui nos passamos todos os objetos e o título de cada uma das colunas
        ModeloTabelaX modeloTabela = new ModeloTabelaX(dadosCliente, colunas);
        
        // seta o modelo da tabela 
        jTableCliente.setModel(modeloTabela);
        
        // CODIGO
        jTableCliente.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTableCliente.getColumnModel().getColumn(0).setResizable(false);
        
        // NOME
        jTableCliente.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTableCliente.getColumnModel().getColumn(1).setResizable(false);
        
        // CARGO
        jTableCliente.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableCliente.getColumnModel().getColumn(2).setResizable(false);
        
        // CPF
        jTableCliente.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTableCliente.getColumnModel().getColumn(3).setResizable(false);
        
        // TELEFONE
        jTableCliente.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTableCliente.getColumnModel().getColumn(4).setResizable(false);

        
        // não deixa reordenar os dados da tabela
        jTableCliente.getTableHeader().setReorderingAllowed(false);
        
        // não deixa a tabela ser redimensionada
        jTableCliente.setAutoResizeMode(jTableCliente.AUTO_RESIZE_OFF);
        
        // permite selecionar apenas um dado na tabela por vez
        jTableCliente.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        // fecha a conexão
        conexaoBD.desconectaBD();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabelCPF;
    private javax.swing.JLabel jLabelCod;
    private javax.swing.JLabel jLabelEndereco;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelTelefone;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanelBotoes;
    private javax.swing.JPanel jPanelFormulario;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCliente;
    private javax.swing.JTable jTableFuncionarios;
    private javax.swing.JTextField jTextFieldCPF;
    private javax.swing.JTextField jTextFieldCod;
    private javax.swing.JTextField jTextFieldEndereco;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldTelefone;
    // End of variables declaration//GEN-END:variables
}

